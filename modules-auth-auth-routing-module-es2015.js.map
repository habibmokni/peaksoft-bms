{"version":3,"sources":["./src/modules/auth/containers/forgot-password-social/forgot-password-social.component.html","./src/modules/auth/containers/forgot-password/forgot-password.component.html","./src/modules/auth/containers/login-social/login-social.component.html","./src/modules/auth/containers/login/login.component.html","./src/modules/auth/containers/multi-tenant-add-users/multi-tenant-add-users.component.html","./src/modules/auth/containers/multi-tenant-select/multi-tenant-select.component.html","./src/modules/auth/containers/org-create/org-create.component.html","./src/modules/auth/containers/org-join/org-join.component.html","./src/modules/auth/containers/register-social/register-social.component.html","./src/modules/auth/containers/register/register.component.html","./src/modules/auth/auth-routing.module.ts","./src/modules/auth/auth.module.ts","./src/modules/auth/components/index.ts","./src/modules/auth/containers/forgot-password-social/forgot-password-social.component.scss","./src/modules/auth/containers/forgot-password-social/forgot-password-social.component.ts","./src/modules/auth/containers/forgot-password/forgot-password.component.scss","./src/modules/auth/containers/forgot-password/forgot-password.component.ts","./src/modules/auth/containers/index.ts","./src/modules/auth/containers/login-social/login-social.component.scss","./src/modules/auth/containers/login-social/login-social.component.ts","./src/modules/auth/containers/login/login.component.scss","./src/modules/auth/containers/login/login.component.ts","./src/modules/auth/containers/multi-tenant-add-users/multi-tenant-add-users.component.scss","./src/modules/auth/containers/multi-tenant-add-users/multi-tenant-add-users.component.ts","./src/modules/auth/containers/multi-tenant-select/multi-tenant-select.component.scss","./src/modules/auth/containers/multi-tenant-select/multi-tenant-select.component.ts","./src/modules/auth/containers/org-create/org-create.component.scss","./src/modules/auth/containers/org-create/org-create.component.ts","./src/modules/auth/containers/org-join/org-join.component.scss","./src/modules/auth/containers/org-join/org-join.component.ts","./src/modules/auth/containers/register-social/register-social.component.scss","./src/modules/auth/containers/register-social/register-social.component.ts","./src/modules/auth/containers/register/register.component.scss","./src/modules/auth/containers/register/register.component.ts","./src/modules/auth/guards/auth.guard.ts","./src/modules/auth/guards/index.ts","./src/modules/auth/services/auth-interceptor.service.ts"],"names":[],"mappings":"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","file":"modules-auth-auth-routing-module-es2015.js","sourcesContent":["export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-xl-5 col-lg-6 col-md-8 col-sm-11\\\">\\n                <div class=\\\"card my-5\\\">\\n                    <div class=\\\"card-body p-5 text-center\\\"><div class=\\\"h3 font-weight-light mb-0\\\">Password Recovery</div></div>\\n                    <hr class=\\\"my-0\\\" />\\n                    <div class=\\\"card-body p-5\\\">\\n                        <div class=\\\"text-center small text-muted mb-4\\\">Enter your email address below and we will send you a link to reset your password.</div>\\n                        <form [formGroup]=\\\"forgotPasswordForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"text-gray-600 small\\\" for=\\\"inputEmailAddress\\\">Email address</label><input class=\\\"form-control sb-form-control-solid py-4\\\" id=\\\"inputEmailAddress\\\" data-cy=\\\"emailInput\\\" type=\\\"email\\\" aria-describedby=\\\"emailHelp\\\" formControlName=\\\"email\\\" [class.is-valid]=\\\"emailControlValid\\\" [class.is-invalid]=\\\"emailControlInvalid\\\" />\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='emailControl.hasError(\\\"required\\\")'>Email required.</div>\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='emailControl.hasError(\\\"email\\\")'>Email is not valid.</div>\\n                            </div>\\n                            <div class=\\\"form-group mb-0\\\"><button class=\\\"btn btn-primary\\\" data-cy=\\\"resetPasswordButton\\\" type=\\\"submit\\\" [disabled]=\\\"forgotPasswordForm.invalid\\\">Reset Password</button></div>\\n                        </form>\\n                    </div>\\n                    <hr class=\\\"my-0\\\" />\\n                    <div class=\\\"card-body px-5 py-4\\\">\\n                        <div class=\\\"small text-center\\\">New user? <a routerLink=\\\"/auth/register-social\\\">Create an account!</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n><ng-template #confirmationModal let-modal\\n    ><div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Forgot Password Form Data</h5>\\n        <button class=\\\"close\\\" type=\\\"button\\\" aria-label=\\\"Close\\\" (click)='modal.dismiss(\\\"Cross click\\\")'><span aria-hidden=\\\"true\\\">×</span></button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        Wired up and ready to go. Just add a backend. <br /><br />\\n        email: <code>{{forgotPasswordForm.value.email}}</code>\\n    </div>\\n    <div class=\\\"modal-footer\\\"><button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"modal.close()\\\">Close</button><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)='modal.close(\\\"DASHBOARD\\\")'>Proceed back to Dashboard</button></div></ng-template\\n>\\n\"","export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-lg-5\\\">\\n                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                    <div class=\\\"card-header justify-content-center\\\"><h3 class=\\\"font-weight-light my-4\\\">Password Recovery</h3></div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"small mb-3 text-muted\\\">Enter your email address and we will send you a link to reset your password.</div>\\n                        <form [formGroup]=\\\"forgotPasswordForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputEmailAddress\\\">Email</label><input class=\\\"form-control py-4\\\" id=\\\"inputEmailAddress\\\" data-cy=\\\"emailInput\\\" type=\\\"email\\\" placeholder=\\\"Enter email address\\\" aria-describedby=\\\"emailHelp\\\" formControlName=\\\"email\\\" [class.is-valid]=\\\"emailControlValid\\\" [class.is-invalid]=\\\"emailControlInvalid\\\" />\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='emailControl.hasError(\\\"required\\\")'>Email required.</div>\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='emailControl.hasError(\\\"email\\\")'>Email is not valid.</div>\\n                            </div>\\n                            <div class=\\\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\\\"><a class=\\\"small\\\" routerLink=\\\"/auth/login\\\">Return to login</a><button class=\\\"btn btn-primary\\\" data-cy=\\\"resetPasswordButton\\\" type=\\\"submit\\\" [disabled]=\\\"forgotPasswordForm.invalid\\\">Reset Password</button></div>\\n                        </form>\\n                    </div>\\n                    <div class=\\\"card-footer text-center\\\">\\n                        <div class=\\\"small\\\"><a routerLink=\\\"/auth/register\\\">Need an account? Sign up!</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n><ng-template #confirmationModal let-modal\\n    ><div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Forgot Password Form Data</h5>\\n        <button class=\\\"close\\\" type=\\\"button\\\" aria-label=\\\"Close\\\" (click)='modal.dismiss(\\\"Cross click\\\")'><span aria-hidden=\\\"true\\\">×</span></button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        Wired up and ready to go. Just add a backend. <br /><br />\\n        email: <code>{{forgotPasswordForm.value.email}}</code>\\n    </div>\\n    <div class=\\\"modal-footer\\\"><button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"modal.close()\\\">Close</button><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)='modal.close(\\\"DASHBOARD\\\")'>Proceed back to Dashboard</button></div></ng-template\\n>\\n\"","export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-xl-5 col-lg-6 col-md-8 col-sm-11\\\">\\n                <div class=\\\"card my-5\\\">\\n                    <div class=\\\"card-body p-5 text-center\\\">\\n                        <div class=\\\"h3 font-weight-light mb-3\\\">Sign In</div>\\n                        <button class=\\\"btn sb-btn-icon sb-btn-facebook mx-1\\\"><fa-icon [icon]='[\\\"fab\\\", \\\"facebook-f\\\"]'></fa-icon></button><button class=\\\"btn sb-btn-icon sb-btn-github mx-1\\\"><fa-icon [icon]='[\\\"fab\\\", \\\"github\\\"]'></fa-icon></button><button class=\\\"btn sb-btn-icon sb-btn-google mx-1\\\"><fa-icon [icon]='[\\\"fab\\\", \\\"google\\\"]'></fa-icon></button><button class=\\\"btn sb-btn-icon sb-btn-twitter mx-1\\\"><fa-icon [icon]='[\\\"fab\\\", \\\"twitter\\\"]'></fa-icon></button>\\n                    </div>\\n                    <hr class=\\\"my-0\\\" />\\n                    <div class=\\\"card-body p-5\\\">\\n                        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"text-gray-600 small\\\" for=\\\"inputEmailAddress\\\">Email address</label><input class=\\\"form-control sb-form-control-solid py-4\\\" id=\\\"inputEmailAddress\\\" data-cy=\\\"emailInput\\\" type=\\\"email\\\" placeholder=\\\"Enter email address\\\" aria-describedby=\\\"emailHelp\\\" formControlName=\\\"email\\\" [class.is-valid]=\\\"emailControlValid\\\" [class.is-invalid]=\\\"emailControlInvalid\\\" />\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='emailControl.hasError(\\\"required\\\")'>Email required.</div>\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='emailControl.hasError(\\\"email\\\")'>Email is not valid.</div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"text-gray-600 small\\\" for=\\\"inputPassword\\\">Password</label><input class=\\\"form-control sb-form-control-solid py-4\\\" id=\\\"inputPassword\\\" data-cy=\\\"passwordInput\\\" type=\\\"password\\\" placeholder=\\\"Enter password\\\" formControlName=\\\"password\\\" [class.is-valid]=\\\"passwordControlValid\\\" [class.is-invalid]=\\\"passwordControlInvalid\\\" />\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"required\\\")'>Password required.</div>\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"minlength\\\")'>Password must be at least 8 characters.</div>\\n                            </div>\\n                            <div class=\\\"form-group\\\"><a class=\\\"small\\\" routerLink=\\\"/auth/forgot-password\\\">Forgot your password?</a></div>\\n                            <div class=\\\"form-group d-flex align-items-center justify-content-between mb-0\\\">\\n                                <div class=\\\"custom-control sb-custom-control-solid custom-checkbox\\\"><input class=\\\"custom-control-input small\\\" id=\\\"rememberPasswordCheck\\\" data-cy=\\\"rememberPasswordCheck\\\" type=\\\"checkbox\\\" formControlName=\\\"checkbox\\\" /><label class=\\\"custom-control-label\\\" for=\\\"rememberPasswordCheck\\\">Remember password</label></div>\\n                                <button class=\\\"btn btn-primary\\\" data-cy=\\\"loginButton\\\" type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\">Login</button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                    <hr class=\\\"my-0\\\" />\\n                    <div class=\\\"card-body px-5 py-4\\\">\\n                        <div class=\\\"small text-center\\\">New user? <a routerLink=\\\"/auth/register-social\\\">Create an account!</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n><ng-template #confirmationModal let-modal\\n    ><div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Login Form Data</h5>\\n        <button class=\\\"close\\\" type=\\\"button\\\" aria-label=\\\"Close\\\" (click)='modal.dismiss(\\\"Cross click\\\")'><span aria-hidden=\\\"true\\\">×</span></button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        Wired up and ready to go. Just add a backend. <br /><br />\\n        email: <code>{{loginForm.value.email}}</code>\\n        <br />\\n        password: <code>{{loginForm.value.password}}</code>\\n        <br />\\n        remember password: <code>{{loginForm.value.checkbox}}</code>\\n    </div>\\n    <div class=\\\"modal-footer\\\"><button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"modal.close()\\\">Close</button><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)='modal.close(\\\"DASHBOARD\\\")'>Proceed back to Dashboard</button></div></ng-template\\n>\\n\"","export default \"<sb-layout-auth>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-lg-5\\\">\\r\\n          <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\r\\n            <div class=\\\"card-header justify-content-center\\\"><img class=\\\"pslogo\\\" src=\\\"https://peak-soft.de/wp-content/uploads/2019/12/1627_PeakSoftGmbH_Logo_DA.png\\\" alt=\\\"peak-soft-logo\\\" /></div>\\r\\n            <!-- <div class=\\\"card-header justify-content-center\\\"><h4 class=\\\"font-weight-light my-4\\\">Login</h4></div> -->\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"justify-content-center\\\"><h5 class=\\\"font-weight-light\\\">Login</h5></div>\\r\\n              <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputEmailAddress\\\">Email</label>\\r\\n                  <input\\r\\n                    class=\\\"form-control py-4\\\"\\r\\n                    id=\\\"inputEmailAddress\\\"\\r\\n                    data-cy=\\\"emailInput\\\"\\r\\n                    type=\\\"email\\\"\\r\\n                    placeholder=\\\"Enter email address\\\"\\r\\n                    aria-describedby=\\\"emailHelp\\\"\\r\\n                    formControlName=\\\"email\\\"\\r\\n                    [class.is-valid]=\\\"emailControlValid\\\"\\r\\n                    [class.is-invalid]=\\\"emailControlInvalid\\\"\\r\\n                  />\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf='emailControl.hasError(\\\"required\\\")'>Email required.</div>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf='emailControl.hasError(\\\"email\\\")'>Email is not valid.</div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label class=\\\"small mb-1\\\" for=\\\"inputPassword\\\">Password</label>\\r\\n                  <input\\r\\n                    class=\\\"form-control py-4\\\"\\r\\n                    id=\\\"inputPassword\\\"\\r\\n                    data-cy=\\\"passwordInput\\\"\\r\\n                    type=\\\"password\\\"\\r\\n                    placeholder=\\\"Enter password\\\"\\r\\n                    formControlName=\\\"password\\\"\\r\\n                    [class.is-valid]=\\\"passwordControlValid\\\"\\r\\n                    [class.is-invalid]=\\\"passwordControlInvalid\\\"\\r\\n                  />\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"required\\\")'>Password required.</div>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"minlength\\\")'>Password must be at least 8 characters.</div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                    <input class=\\\"custom-control-input\\\" id=\\\"rememberPasswordCheck\\\" data-cy=\\\"rememberPasswordCheck\\\" type=\\\"checkbox\\\" formControlName=\\\"checkbox\\\" />\\r\\n                    <label class=\\\"custom-control-label\\\" for=\\\"rememberPasswordCheck\\\">Remember password</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\\\">\\r\\n                  <a class=\\\"small\\\" routerLink=\\\"/auth/forgot-password\\\">Forgot Password?</a>\\r\\n                  <button \\r\\n                    id=\\\"login-btn\\\"\\r\\n                    class=\\\"btn btn-primary\\\" \\r\\n                    data-cy=\\\"loginButton\\\" \\r\\n                    type=\\\"submit\\\" \\r\\n                    [disabled]=\\\"loginForm.invalid\\\">\\r\\n                  Login\\r\\n                </button>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer text-center\\\">\\r\\n              <div class=\\\"small\\\"><a routerLink=\\\"/auth/register\\\">Need an account? Sign up!</a></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </sb-layout-auth>\\r\\n  <ng-template #confirmationModal let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h5 class=\\\"modal-title\\\">Login Form Data</h5>\\r\\n      <button class=\\\"close\\\" type=\\\"button\\\" aria-label=\\\"Close\\\" (click)='modal.dismiss(\\\"Cross click\\\")'><span aria-hidden=\\\"true\\\">×</span></button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      Wired up and ready to go. Just add a backend. <br />\\r\\n      <br />\\r\\n      email: <code>{{loginForm.value.email}}</code>\\r\\n      <br />\\r\\n      password: <code>{{loginForm.value.password}}</code>\\r\\n      <br />\\r\\n      remember password: <code>{{loginForm.value.checkbox}}</code>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\"><button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"modal.close()\\\">Close</button><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)='modal.close(\\\"DASHBOARD\\\")'>Proceed back to Dashboard</button></div>\\r\\n  </ng-template>\\r\\n  \"","export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <!-- Create Organization-->\\n            <div class=\\\"col-xl-5 col-lg-6 col-md-8 col-sm-11\\\">\\n                <div class=\\\"card mt-5\\\">\\n                    <div class=\\\"card-body p-5 text-center\\\">\\n                        <div class=\\\"sb-icons-org-create align-items-center mx-auto\\\"><i-feather class=\\\"sb-icon-users\\\" name=\\\"users\\\"></i-feather><fa-icon class=\\\"sb-icon-plus\\\" [icon]='[\\\"fas\\\", \\\"plus\\\"]'></fa-icon></div>\\n                        <div class=\\\"h3 text-primary font-weight-300 mb-0\\\">Who else is part of this organization?</div>\\n                    </div>\\n                    <hr class=\\\"m-0\\\" />\\n                    <div class=\\\"card-body p-5\\\">\\n                        <form [formGroup]=\\\"addUsersForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                            <div formArrayName=\\\"emails\\\" *ngFor=\\\"let email of emails.controls; let i=index\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <input class=\\\"form-control form-control-solid\\\" [attr.data-cy]='\\\"emailInput_\\\" + i' type=\\\"text\\\" placeholder=\\\"name@example.com\\\" [formControlName]=\\\"i\\\" [class.is-valid]=\\\"emailControlValid(i)\\\" [class.is-invalid]=\\\"emailControlInvalid(i)\\\" />\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf='email.hasError(\\\"required\\\")'>Email required.</div>\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf='email.hasError(\\\"email\\\")'>Email is not valid.</div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group text-right\\\">\\n                                <button class=\\\"btn btn-link p-0\\\" data-cy=\\\"addAnotherButton\\\" [disabled]=\\\"addUsersForm.invalid\\\" (click)=\\\"addAnother()\\\"><fa-icon class=\\\"sb-icon-plus-circle mr-1\\\" [icon]='[\\\"fas\\\", \\\"plus-circle\\\"]'></fa-icon>Add another</button>\\n                            </div>\\n                            <div class=\\\"form-group\\\"><button class=\\\"btn btn-block btn-primary\\\" data-cy=\\\"addMembersButton\\\" type=\\\"submit\\\" [disabled]=\\\"addUsersForm.invalid\\\">Add Members</button></div>\\n                            <div class=\\\"form-group mb-5\\\">\\n                                <a class=\\\"d-flex align-items-center\\\" href=\\\"javascript:void(0);\\\"><i-feather class=\\\"mr-1\\\" name=\\\"link\\\"></i-feather>Get an invite link to share</a>\\n                            </div>\\n                            <div class=\\\"form-group mb-0 text-center\\\">Or, <a routerLink=\\\"/dashboard\\\">skip for now</a></div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n><ng-template #confirmationModal let-modal\\n    ><div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Add Members Data</h5>\\n        <button class=\\\"close\\\" type=\\\"button\\\" aria-label=\\\"Close\\\" (click)='modal.dismiss(\\\"Cross click\\\")'><span aria-hidden=\\\"true\\\">×</span></button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        Wired up and ready to go. Just add a backend.<br /><br /><span *ngFor=\\\"let email of emails.controls\\\"><code>{{email.value}}</code><br /></span>\\n    </div>\\n    <div class=\\\"modal-footer\\\"><button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"modal.close()\\\">Close</button><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)='modal.close(\\\"DASHBOARD\\\")'>Proceed back to Dashboard</button></div></ng-template\\n>\\n\"","export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <!-- Create Organization-->\\n            <div class=\\\"col-xl-4 col-lg-6 col-md-8 col-sm-11\\\">\\n                <div class=\\\"card mt-5\\\">\\n                    <div class=\\\"card-body px-5 pt-5 text-center\\\">\\n                        <div class=\\\"h3 text-primary font-weight-300\\\">Create</div>\\n                        <p class=\\\"text-muted\\\">Create an organization and invite new members</p>\\n                        <div class=\\\"sb-icons-org-create align-items-center mx-auto\\\"><i-feather class=\\\"sb-icon-users\\\" name=\\\"users\\\"></i-feather><fa-icon class=\\\"sb-icon-plus\\\" [icon]='[\\\"fas\\\", \\\"plus\\\"]'></fa-icon></div>\\n                    </div>\\n                    <hr class=\\\"my-0\\\" />\\n                    <div class=\\\"card-body px-5 py-4\\\">\\n                        <div class=\\\"small text-center\\\"><a class=\\\"btn btn-block btn-primary\\\" data-cy=\\\"createNewOrganization\\\" routerLink=\\\"/auth/org-create\\\">Create new organization</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!-- Join Organization-->\\n            <div class=\\\"col-xl-4 col-lg-6 col-md-8 col-sm-11\\\">\\n                <div class=\\\"card mt-5\\\">\\n                    <div class=\\\"card-body px-5 pt-5 text-center\\\">\\n                        <div class=\\\"h3 text-secondary font-weight-300\\\">Join</div>\\n                        <p class=\\\"text-muted\\\">Enter an access code or request access to an existing organization</p>\\n                        <div class=\\\"sb-icons-org-join align-items-center mx-auto\\\"><i-feather class=\\\"sb-icon-user\\\" name=\\\"user\\\"></i-feather><fa-icon class=\\\"sb-icon-arrow d-inline-flex\\\" [icon]='[\\\"fas\\\", \\\"long-arrow-alt-right\\\"]'></fa-icon><i-feather class=\\\"sb-icon-users\\\" name=\\\"users\\\"></i-feather></div>\\n                    </div>\\n                    <hr class=\\\"my-0\\\" />\\n                    <div class=\\\"card-body px-5 py-4\\\">\\n                        <div class=\\\"small text-center\\\"><a class=\\\"btn btn-block btn-secondary\\\" data-cy=\\\"joinOrganization\\\" routerLink=\\\"/auth/org-join\\\">Join an organization</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n>\\n\"","export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-xl-5 col-lg-6 col-md-8 col-sm-11\\\">\\n                <div class=\\\"card mt-5\\\">\\n                    <div class=\\\"card-body p-5 text-center\\\">\\n                        <div class=\\\"sb-icons-org-create align-items-center mx-auto\\\"><i-feather class=\\\"sb-icon-users\\\" name=\\\"users\\\"></i-feather><fa-icon class=\\\"sb-icon-plus\\\" [icon]='[\\\"fas\\\", \\\"plus\\\"]'></fa-icon></div>\\n                        <div class=\\\"h3 text-primary font-weight-300 mb-0\\\">Create an Organization</div>\\n                    </div>\\n                    <hr class=\\\"m-0\\\" />\\n                    <div class=\\\"card-body p-5\\\">\\n                        <form [formGroup]=\\\"organizationNewForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <input class=\\\"form-control form-control-solid\\\" data-cy=\\\"nameInput\\\" type=\\\"text\\\" placeholder=\\\"Enter new organization name\\\" aria-describedby=\\\"nameHelp\\\" formControlName=\\\"name\\\" [class.is-valid]=\\\"nameControlValid\\\" [class.is-invalid]=\\\"nameControlInvalid\\\" />\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='nameControl.hasError(\\\"required\\\")'>Name required</div>\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='nameControl.hasError(\\\"name\\\")'>Name is not available</div>\\n                            </div>\\n                            <div class=\\\"form-group mb-0\\\"><button class=\\\"btn btn-block btn-primary\\\" data-cy=\\\"organizationNewButton\\\" type=\\\"submit\\\" [disabled]=\\\"organizationNewForm.invalid\\\">Create Organization</button></div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n>\\n\"","export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-xl-5 col-lg-6 col-md-8 col-sm-11\\\">\\n                <div class=\\\"card border-0 shadow-lg mt-5\\\">\\n                    <div class=\\\"card-body p-5 text-center\\\">\\n                        <div class=\\\"sb-icons-org-join\\\"><i-feather class=\\\"sb-icon-user\\\" name=\\\"user\\\"></i-feather><fa-icon class=\\\"sb-icon-arrow\\\" [icon]='[\\\"fas\\\", \\\"long-arrow-alt-right\\\"]'></fa-icon><i-feather class=\\\"sb-icon-users\\\" name=\\\"users\\\"></i-feather></div>\\n                        <div class=\\\"h3 text-secondary font-weight-300 mb-0\\\">Join an Organization</div>\\n                    </div>\\n                    <hr class=\\\"m-0\\\" />\\n                    <div class=\\\"card-body p-5\\\">\\n                        <form [formGroup]=\\\"organizationJoinFormCode\\\" (ngSubmit)=\\\"onSubmitCode()\\\">\\n                            <h5 class=\\\"font-weight-500 mb-3\\\">Have an access code?</h5>\\n                            <div class=\\\"form-group\\\">\\n                                <input class=\\\"form-control form-control-solid py-4\\\" id=\\\"codeInput\\\" data-cy=\\\"codeInput\\\" type=\\\"text\\\" placeholder=\\\"Enter access code\\\" aria-label=\\\"Access Code\\\" formControlName=\\\"code\\\" [class.is-valid]=\\\"codeControlValid\\\" [class.is-invalid]=\\\"codeControlInvalid\\\" />\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='codeControl.hasError(\\\"required\\\")'>Code required</div>\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='codeControl.hasError(\\\"code\\\")'>Code not recognized</div>\\n                            </div>\\n                            <div class=\\\"form-group\\\"><button class=\\\"btn btn-block btn-secondary\\\" data-cy=\\\"accessCodeButton\\\" type=\\\"submit\\\" [disabled]=\\\"organizationJoinFormCode.invalid\\\">Request</button></div>\\n                        </form>\\n                    </div>\\n                    <div class=\\\"sb-org-or-divider\\\"><div class=\\\"sb-org-or\\\">or</div></div>\\n                    <div class=\\\"card-body p-5\\\">\\n                        <form [formGroup]=\\\"organizationJoinFormRequest\\\" (ngSubmit)=\\\"onSubmitRequest()\\\">\\n                            <h5 class=\\\"font-weight-500 mb-3\\\">Request access</h5>\\n                            <div class=\\\"form-group\\\">\\n                                <input class=\\\"form-control form-control-solid py-4\\\" id=\\\"joinNameInput\\\" data-cy=\\\"joinNameInput\\\" type=\\\"text\\\" placeholder=\\\"Existing organization name\\\" aria-label=\\\"Organization Name\\\" formControlName=\\\"name\\\" [class.is-valid]=\\\"nameControlValid\\\" [class.is-invalid]=\\\"nameControlInvalid\\\" />\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='nameControl.hasError(\\\"required\\\")'>Name required</div>\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='nameControl.hasError(\\\"name\\\")'>Organization not recognized</div>\\n                            </div>\\n                            <div class=\\\"form-group\\\"><button class=\\\"btn btn-block btn-secondary\\\" data-cy=\\\"joinOrgNamedButton\\\" type=\\\"submit\\\" [disabled]=\\\"organizationJoinFormRequest.invalid\\\">Join</button></div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n><ng-template #confirmationModalAccessCode let-modal\\n    ><div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Access Code</h5>\\n        <button class=\\\"close\\\" type=\\\"button\\\" aria-label=\\\"Close\\\" (click)='modal.dismiss(\\\"Cross click\\\")'><span aria-hidden=\\\"true\\\">×</span></button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        Wired up and ready to go. Just add a backend. <br /><br />\\n        code: <code>{{organizationJoinFormCode.value.code}}</code>\\n    </div>\\n    <div class=\\\"modal-footer\\\"><button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"modal.close()\\\">Close</button><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)='modal.close(\\\"DASHBOARD\\\")'>Proceed back to Dashboard</button></div></ng-template\\n><ng-template #confirmationModalRequest let-modal\\n    ><div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Request Access</h5>\\n        <button class=\\\"close\\\" type=\\\"button\\\" aria-label=\\\"Close\\\" (click)='modal.dismiss(\\\"Cross click\\\")'><span aria-hidden=\\\"true\\\">×</span></button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        Wired up and ready to go. Just add a backend. <br /><br />\\n        name: <code>{{organizationJoinFormRequest.value.name}}</code>\\n    </div>\\n    <div class=\\\"modal-footer\\\"><button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"modal.close()\\\">Close</button><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)='modal.close(\\\"DASHBOARD\\\")'>Proceed back to Dashboard</button></div></ng-template\\n>\\n\"","export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <!-- Register Form-->\\n            <div class=\\\"col-xl-8 col-lg-9\\\">\\n                <div class=\\\"card my-5\\\">\\n                    <div class=\\\"card-body p-5 text-center\\\">\\n                        <div class=\\\"h3 font-weight-light mb-3\\\">Create an Account</div>\\n                        <div class=\\\"small text-muted mb-2\\\">Sign in using...</div>\\n                        <button class=\\\"btn sb-btn-icon sb-btn-facebook mx-1\\\"><fa-icon [icon]='[\\\"fab\\\", \\\"facebook-f\\\"]'></fa-icon></button><button class=\\\"btn sb-btn-icon sb-btn-github mx-1\\\"><fa-icon [icon]='[\\\"fab\\\", \\\"github\\\"]'></fa-icon></button><button class=\\\"btn sb-btn-icon sb-btn-google mx-1\\\"><fa-icon [icon]='[\\\"fab\\\", \\\"google\\\"]'></fa-icon></button><button class=\\\"btn sb-btn-icon sb-btn-twitter mx-1\\\"><fa-icon [icon]='[\\\"fab\\\", \\\"twitter\\\"]'></fa-icon></button>\\n                    </div>\\n                    <hr class=\\\"my-0\\\" />\\n                    <div class=\\\"card-body p-5\\\">\\n                        <div class=\\\"text-center small text-muted mb-4\\\">...or enter your information below.</div>\\n                        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                            <div class=\\\"form-row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray-600 small\\\" for=\\\"inputFirstName\\\">First name</label><input class=\\\"form-control sb-form-control-solid py-4\\\" id=\\\"inputFirstName\\\" data-cy=\\\"firstNameInput\\\" type=\\\"text\\\" formControlName=\\\"firstName\\\" [class.is-valid]=\\\"firstNameControlValid\\\" [class.is-invalid]=\\\"firstNameControlInvalid\\\" />\\n                                        <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf='firstNameControl.hasError(\\\"required\\\")'>First name required.</div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray-600 small\\\" for=\\\"inputLastName\\\">Last name </label><input class=\\\"form-control sb-form-control-solid py-4\\\" id=\\\"inputLastName\\\" data-cy=\\\"lastNameInput\\\" type=\\\"text\\\" formControlName=\\\"lastName\\\" [class.is-valid]=\\\"lastNameControlValid\\\" [class.is-invalid]=\\\"lastNameControlInvalid\\\" />\\n                                        <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf='lastNameControl.hasError(\\\"required\\\")'>Last name required.</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"text-gray-600 small\\\" for=\\\"inputEmailAddress\\\">Email address</label><input class=\\\"form-control sb-form-control-solid py-4\\\" id=\\\"inputEmailAddress\\\" data-cy=\\\"emailInput\\\" type=\\\"email\\\" aria-describedby=\\\"emailHelp\\\" formControlName=\\\"email\\\" [class.is-valid]=\\\"emailControlValid\\\" [class.is-invalid]=\\\"emailControlInvalid\\\" />\\n                                <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='emailControl.hasError(\\\"required\\\")'>Email required.</div>\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='emailControl.hasError(\\\"email\\\")'>Email is not valid.</div>\\n                            </div>\\n                            <div class=\\\"form-row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray-600 small\\\" for=\\\"inputPassword\\\">Password</label><input class=\\\"form-control sb-form-control-solid py-4\\\" id=\\\"inputPassword\\\" data-cy=\\\"passwordInput\\\" type=\\\"password\\\" formControlName=\\\"password\\\" [class.is-valid]=\\\"passwordControlValid\\\" [class.is-invalid]=\\\"passwordControlInvalid\\\" />\\n                                        <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"required\\\")'>Password required.</div>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"minlength\\\")'>Password must be at least 8 characters.</div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"text-gray-600 small\\\" for=\\\"inputConfirmPassword\\\">Confirm Password</label><input class=\\\"form-control sb-form-control-solid py-4\\\" id=\\\"inputConfirmPassword\\\" data-cy=\\\"confirmPasswordInput\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" [class.is-valid]=\\\"confirmPasswordControlValid\\\" [class.is-invalid]=\\\"confirmPasswordControlInvalid\\\" />\\n                                        <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf='confirmPasswordControl.hasError(\\\"required\\\")'>Confirm Password required.</div>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf='registerForm.hasError(\\\"passwordMismatch\\\")'>Passwords do not match.</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group d-flex align-items-center justify-content-between\\\">\\n                                <div class=\\\"custom-control sb-custom-control-solid custom-checkbox\\\">\\n                                    <input class=\\\"custom-control-input small\\\" id=\\\"termsAndConditionsInput\\\" data-cy=\\\"termsAndConditionsInput\\\" type=\\\"checkbox\\\" formControlName=\\\"termsAndConditions\\\" [class.is-valid]=\\\"termsAndConditionsControlValid\\\" [class.is-invalid]=\\\"termsAndConditionsControlInvalid\\\" /><label class=\\\"custom-control-label\\\" for=\\\"termsAndConditionsInput\\\">I accept the terms & conditions</label>\\n                                    <div class=\\\"invalid-feedback\\\" *ngIf='termsAndConditionsControl.hasError(\\\"required\\\")'>You must accept the terms & conditions.</div>\\n                                </div>\\n                                <button class=\\\"btn btn-primary\\\" data-cy=\\\"registerButton\\\" type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid\\\">Create Account</button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                    <hr class=\\\"my-0\\\" />\\n                    <div class=\\\"card-body px-5 py-4\\\">\\n                        <div class=\\\"small text-center\\\">Have an account? <a routerLink=\\\"/auth/login-social\\\">Sign in!</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n><ng-template #confirmationModal let-modal\\n    ><div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Create Account Form Data</h5>\\n        <button class=\\\"close\\\" type=\\\"button\\\" aria-label=\\\"Close\\\" (click)='modal.dismiss(\\\"Cross click\\\")'><span aria-hidden=\\\"true\\\">×</span></button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        Wired up and ready to go. Just add a backend. <br /><br />\\n        firstName: <code>{{registerForm.value.firstName}}</code>\\n        <br />\\n        lastName: <code>{{registerForm.value.lastName}}</code>\\n        <br />\\n        email: <code>{{registerForm.value.email}}</code>\\n        <br />\\n        password: <code>{{registerForm.value.password}}</code>\\n        <br />\\n        termsAndConditions: <code>{{registerForm.value.termsAndConditions}}</code>\\n    </div>\\n    <div class=\\\"modal-footer\\\"><button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"modal.close()\\\">Close</button><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)='modal.close(\\\"DASHBOARD\\\")'>Proceed back to Dashboard</button></div></ng-template\\n>\\n\"","export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-lg-7\\\">\\n                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                    <div class=\\\"card-header justify-content-center\\\"><h3 class=\\\"font-weight-light my-4\\\">Create Account</h3></div>\\n                    <div class=\\\"card-body\\\">\\n                        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                            <div class=\\\"form-row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"small mb-1\\\" for=\\\"inputFirstName\\\">First Name</label><input class=\\\"form-control py-4\\\" id=\\\"inputFirstName\\\" data-cy=\\\"firstNameInput\\\" type=\\\"text\\\" placeholder=\\\"Enter first name\\\" formControlName=\\\"firstName\\\" [class.is-valid]=\\\"firstNameControlValid\\\" [class.is-invalid]=\\\"firstNameControlInvalid\\\" />\\n                                        <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf='firstNameControl.hasError(\\\"required\\\")'>First name required.</div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"small mb-1\\\" for=\\\"inputLastName\\\">Last Name</label><input class=\\\"form-control py-4\\\" id=\\\"inputLastName\\\" data-cy=\\\"lastNameInput\\\" type=\\\"text\\\" placeholder=\\\"Enter last name\\\" formControlName=\\\"lastName\\\" [class.is-valid]=\\\"lastNameControlValid\\\" [class.is-invalid]=\\\"lastNameControlInvalid\\\" />\\n                                        <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf='lastNameControl.hasError(\\\"required\\\")'>Last name required.</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"small mb-1\\\" for=\\\"inputEmailAddress\\\">Email</label><input class=\\\"form-control py-4\\\" id=\\\"inputEmailAddress\\\" data-cy=\\\"emailInput\\\" type=\\\"email\\\" placeholder=\\\"Enter email address\\\" aria-describedby=\\\"emailHelp\\\" formControlName=\\\"email\\\" [class.is-valid]=\\\"emailControlValid\\\" [class.is-invalid]=\\\"emailControlInvalid\\\" />\\n                                <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='emailControl.hasError(\\\"required\\\")'>Email required.</div>\\n                                <div class=\\\"invalid-feedback\\\" *ngIf='emailControl.hasError(\\\"email\\\")'>Email is not valid.</div>\\n                            </div>\\n                            <div class=\\\"form-row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"small mb-1\\\" for=\\\"inputPassword\\\">Password</label><input class=\\\"form-control py-4\\\" id=\\\"inputPassword\\\" data-cy=\\\"passwordInput\\\" type=\\\"password\\\" placeholder=\\\"Enter password\\\" formControlName=\\\"password\\\" [class.is-valid]=\\\"passwordControlValid\\\" [class.is-invalid]=\\\"passwordControlInvalid\\\" />\\n                                        <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"required\\\")'>Password required.</div>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf='passwordControl.hasError(\\\"minlength\\\")'>Password must be at least 8 characters.</div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"small mb-1\\\" for=\\\"inputConfirmPassword\\\">Confirm Password</label><input class=\\\"form-control py-4\\\" id=\\\"inputConfirmPassword\\\" data-cy=\\\"confirmPasswordInput\\\" type=\\\"password\\\" placeholder=\\\"Confirm password\\\" formControlName=\\\"confirmPassword\\\" [class.is-valid]=\\\"confirmPasswordControlValid\\\" [class.is-invalid]=\\\"confirmPasswordControlInvalid\\\" />\\n                                        <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf='confirmPasswordControl.hasError(\\\"required\\\")'>Confirm Password required.</div>\\n                                        <div class=\\\"invalid-feedback\\\" *ngIf='registerForm.hasError(\\\"passwordMismatch\\\")'>Passwords do not match.</div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group mt-4 mb-0\\\"><button class=\\\"btn btn-primary btn-block\\\" data-cy=\\\"registerButton\\\" type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid\\\">Create Account</button></div>\\n                        </form>\\n                    </div>\\n                    <div class=\\\"card-footer text-center\\\">\\n                        <div class=\\\"small\\\"><a routerLink=\\\"/auth/login\\\">Have an account? Go to login</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth\\n><ng-template #confirmationModal let-modal\\n    ><div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">Create Account Form Data</h5>\\n        <button class=\\\"close\\\" type=\\\"button\\\" aria-label=\\\"Close\\\" (click)='modal.dismiss(\\\"Cross click\\\")'><span aria-hidden=\\\"true\\\">×</span></button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n        Wired up and ready to go. Just add a backend. <br /><br />\\n        firstName: <code>{{registerForm.value.firstName}}</code>\\n        <br />\\n        lastName: <code>{{registerForm.value.lastName}}</code>\\n        <br />\\n        email: <code>{{registerForm.value.email}}</code>\\n        <br />\\n        password: <code>{{registerForm.value.password}}</code>\\n    </div>\\n    <div class=\\\"modal-footer\\\"><button class=\\\"btn btn-secondary\\\" type=\\\"button\\\" (click)=\\\"modal.close()\\\">Close</button><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)='modal.close(\\\"DASHBOARD\\\")'>Proceed back to Dashboard</button></div></ng-template\\n>\\n\"","/* tslint:disable: ordered-imports*/\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SBRouteData } from '@modules/navigation/models';\r\n\r\n/* Module */\r\nimport { AuthModule } from './auth.module';\r\n\r\n/* Containers */\r\nimport * as authContainers from './containers';\r\n\r\n/* Guards */\r\nimport * as authGuards from './guards';\r\n\r\n/* Routes */\r\nexport const ROUTES: Routes = [\r\n    {\r\n        path: '',\r\n        pathMatch: 'full',\r\n        redirectTo: 'login',\r\n    },\r\n    {\r\n        path: 'login',\r\n        canActivate: [],\r\n        component: authContainers.LoginComponent,\r\n        data: {\r\n            title: 'Login - SB Admin Pro Angular',\r\n        } as SBRouteData,\r\n    },\r\n    {\r\n        path: 'register',\r\n        canActivate: [],\r\n        component: authContainers.RegisterComponent,\r\n        data: {\r\n            title: 'Register - SB Admin Pro Angular',\r\n        } as SBRouteData,\r\n    },\r\n    {\r\n        path: 'forgot-password',\r\n        canActivate: [],\r\n        component: authContainers.ForgotPasswordComponent,\r\n        data: {\r\n            title: 'Forgot Password - SB Admin Pro Angular',\r\n        } as SBRouteData,\r\n    },\r\n    {\r\n        path: 'login-social',\r\n        canActivate: [],\r\n        component: authContainers.LoginSocialComponent,\r\n        data: {\r\n            title: 'Login Social - SB Admin Pro Angular',\r\n        } as SBRouteData,\r\n    },\r\n    {\r\n        path: 'register-social',\r\n        canActivate: [],\r\n        component: authContainers.RegisterSocialComponent,\r\n        data: {\r\n            title: 'Register Social - SB Admin Pro Angular',\r\n        } as SBRouteData,\r\n    },\r\n    {\r\n        path: 'forgot-password-social',\r\n        canActivate: [],\r\n        component: authContainers.ForgotPasswordSocialComponent,\r\n        data: {\r\n            title: 'Forgot Password Social - SB Admin Pro Angular',\r\n        } as SBRouteData,\r\n    },\r\n    {\r\n        path: 'multi-tenant-select',\r\n        canActivate: [],\r\n        component: authContainers.MultiTenantSelectComponent,\r\n        data: {\r\n            title: 'Multi-Tenant Select - SB Admin Pro Angular',\r\n        } as SBRouteData,\r\n    },\r\n    {\r\n        path: 'multi-tenant-add-users',\r\n        canActivate: [],\r\n        component: authContainers.MultiTenantAddUsersComponent,\r\n        data: {\r\n            title: 'Multi-Tenant Add Users - SB Admin Pro Angular',\r\n        } as SBRouteData,\r\n    },\r\n    {\r\n        path: 'org-create',\r\n        canActivate: [],\r\n        component: authContainers.OrgCreateComponent,\r\n        data: {\r\n            title: 'Org Create - SB Admin Pro Angular',\r\n        } as SBRouteData,\r\n    },\r\n    {\r\n        path: 'org-join',\r\n        canActivate: [],\r\n        component: authContainers.OrgJoinComponent,\r\n        data: {\r\n            title: 'Org Join - SB Admin Pro Angular',\r\n        } as SBRouteData,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [AuthModule, RouterModule.forChild(ROUTES)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","/* tslint:disable: ordered-imports*/\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n/* Modules */\r\nimport { AppCommonModule } from '@common/app-common.module';\r\nimport { NavigationModule } from '@modules/navigation/navigation.module';\r\n\r\n/* Components */\r\nimport * as authComponents from './components';\r\n\r\n/* Containers */\r\nimport * as authContainers from './containers';\r\n\r\n/* Guards */\r\nimport * as authGuards from './guards';\r\n\r\n/* Services */\r\nimport * as authServices from './services';\r\nimport { AuthInterceptorService } from './services/auth-interceptor.service';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        AppCommonModule,\r\n        NavigationModule,\r\n    ],\r\n    providers: [\r\n        ...authServices.services,\r\n        ...authGuards.guards,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: AuthInterceptorService,\r\n            multi: true,\r\n        },\r\n    ],\r\n    declarations: [...authContainers.containers, ...authComponents.components],\r\n    exports: [...authContainers.containers, ...authComponents.components],\r\n})\r\nexport class AuthModule {}\r\n","export const components: any = [];\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvZm9yZ290LXBhc3N3b3JkLXNvY2lhbC9mb3Jnb3QtcGFzc3dvcmQtc29jaWFsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { ChangeDetectionStrategy, Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'sbpro-forgot-password-social',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './forgot-password-social.component.html',\r\n    styleUrls: ['forgot-password-social.component.scss'],\r\n})\r\nexport class ForgotPasswordSocialComponent implements OnInit {\r\n    @ViewChild('confirmationModal') confirmationModal!: TemplateRef<unknown>;\r\n\r\n    forgotPasswordForm = this.fb.group({\r\n        email: ['', [Validators.required, Validators.email]],\r\n    });\r\n\r\n    constructor(private fb: FormBuilder, private modalService: NgbModal, private router: Router) {}\r\n    ngOnInit() {}\r\n\r\n    onSubmit() {\r\n        if (this.forgotPasswordForm.status === 'VALID') {\r\n            this.modalService.open(this.confirmationModal).result.then(\r\n                result => {\r\n                    if (result === 'DASHBOARD') {\r\n                        this.router.navigate(['/dashboard']);\r\n                    }\r\n                },\r\n                reason => {}\r\n            );\r\n        }\r\n\r\n        for (const key in this.forgotPasswordForm.controls) {\r\n            const control = this.forgotPasswordForm.controls[key];\r\n            control.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    /* Accessor Methods */\r\n\r\n    get emailControl() {\r\n        return this.forgotPasswordForm.get('email') as FormControl;\r\n    }\r\n\r\n    get emailControlValid() {\r\n        return this.emailControl.touched && !this.emailControlInvalid;\r\n    }\r\n\r\n    get emailControlInvalid() {\r\n        return (\r\n            this.emailControl.touched &&\r\n            (this.emailControl.hasError('required') || this.emailControl.hasError('email'))\r\n        );\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { ChangeDetectionStrategy, Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'sb-forgot-password',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './forgot-password.component.html',\r\n    styleUrls: ['forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n    @ViewChild('confirmationModal') confirmationModal!: TemplateRef<unknown>;\r\n\r\n    forgotPasswordForm = this.fb.group({\r\n        email: ['', [Validators.required, Validators.email]],\r\n    });\r\n\r\n    constructor(private fb: FormBuilder, private modalService: NgbModal, private router: Router) {}\r\n    ngOnInit() {}\r\n\r\n    onSubmit() {\r\n        if (this.forgotPasswordForm.status === 'VALID') {\r\n            this.modalService.open(this.confirmationModal).result.then(\r\n                result => {\r\n                    if (result === 'DASHBOARD') {\r\n                        this.router.navigate(['/dashboard']);\r\n                    }\r\n                },\r\n                reason => {}\r\n            );\r\n        }\r\n\r\n        for (const key in this.forgotPasswordForm.controls) {\r\n            const control = this.forgotPasswordForm.controls[key];\r\n            control.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    /* Accessor Methods */\r\n\r\n    get emailControl() {\r\n        return this.forgotPasswordForm.get('email') as FormControl;\r\n    }\r\n\r\n    get emailControlValid() {\r\n        return this.emailControl.touched && !this.emailControlInvalid;\r\n    }\r\n\r\n    get emailControlInvalid() {\r\n        return (\r\n            this.emailControl.touched &&\r\n            (this.emailControl.hasError('required') || this.emailControl.hasError('email'))\r\n        );\r\n    }\r\n}\r\n","import { ForgotPasswordSocialComponent } from './forgot-password-social/forgot-password-social.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LoginSocialComponent } from './login-social/login-social.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { MultiTenantAddUsersComponent } from './multi-tenant-add-users/multi-tenant-add-users.component';\r\nimport { MultiTenantSelectComponent } from './multi-tenant-select/multi-tenant-select.component';\r\nimport { OrgCreateComponent } from './org-create/org-create.component';\r\nimport { OrgJoinComponent } from './org-join/org-join.component';\r\nimport { RegisterSocialComponent } from './register-social/register-social.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nexport const containers = [\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ForgotPasswordComponent,\r\n    LoginSocialComponent,\r\n    RegisterSocialComponent,\r\n    ForgotPasswordSocialComponent,\r\n    MultiTenantSelectComponent,\r\n    OrgCreateComponent,\r\n    OrgJoinComponent,\r\n    MultiTenantAddUsersComponent,\r\n];\r\n\r\nexport * from './login/login.component';\r\nexport * from './register/register.component';\r\nexport * from './forgot-password/forgot-password.component';\r\nexport * from './login-social/login-social.component';\r\nexport * from './register-social/register-social.component';\r\nexport * from './forgot-password-social/forgot-password-social.component';\r\nexport * from './multi-tenant-select/multi-tenant-select.component';\r\nexport * from './org-create/org-create.component';\r\nexport * from './org-join/org-join.component';\r\nexport * from './multi-tenant-add-users/multi-tenant-add-users.component';\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvbG9naW4tc29jaWFsL2xvZ2luLXNvY2lhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { ChangeDetectionStrategy, Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'sbpro-login-social',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './login-social.component.html',\r\n    styleUrls: ['login-social.component.scss'],\r\n})\r\nexport class LoginSocialComponent implements OnInit {\r\n    @ViewChild('confirmationModal') confirmationModal!: TemplateRef<unknown>;\r\n\r\n    loginForm = this.fb.group({\r\n        email: ['', [Validators.required, Validators.email]],\r\n        password: ['', [Validators.required, Validators.minLength(8)]],\r\n        checkbox: [false],\r\n    });\r\n\r\n    constructor(private fb: FormBuilder, private modalService: NgbModal, private router: Router) {}\r\n    ngOnInit() {}\r\n\r\n    onSubmit() {\r\n        if (this.loginForm.status === 'VALID') {\r\n            this.modalService.open(this.confirmationModal).result.then(\r\n                result => {\r\n                    if (result === 'DASHBOARD') {\r\n                        this.router.navigate(['/dashboard']);\r\n                    }\r\n                },\r\n                reason => {}\r\n            );\r\n        }\r\n\r\n        for (const key in this.loginForm.controls) {\r\n            const control = this.loginForm.controls[key];\r\n            control.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    /* Accessor Methods */\r\n\r\n    get emailControl() {\r\n        return this.loginForm.get('email') as FormControl;\r\n    }\r\n\r\n    get emailControlValid() {\r\n        return this.emailControl.touched && !this.emailControlInvalid;\r\n    }\r\n\r\n    get emailControlInvalid() {\r\n        return (\r\n            this.emailControl.touched &&\r\n            (this.emailControl.hasError('required') || this.emailControl.hasError('email'))\r\n        );\r\n    }\r\n\r\n    get passwordControl() {\r\n        return this.loginForm.get('password') as FormControl;\r\n    }\r\n\r\n    get passwordControlValid() {\r\n        return this.passwordControl.touched && !this.passwordControlInvalid;\r\n    }\r\n\r\n    get passwordControlInvalid() {\r\n        return (\r\n            this.passwordControl.touched &&\r\n            (this.passwordControl.hasError('required') ||\r\n                this.passwordControl.hasError('minlength'))\r\n        );\r\n    }\r\n}\r\n","export default \".pslogo {\\n  max-width: -webkit-fill-available;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL2F1dGgvY29udGFpbmVycy9sb2dpbi9DOlxcVXNlcnNcXEhhYmliTW9rbmlcXERvY3VtZW50c1xcR2l0SHViXFxwcy1ibXMvc3JjXFxtb2R1bGVzXFxhdXRoXFxjb250YWluZXJzXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiLCJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxpQ0FBQTtBQ0FKIiwiZmlsZSI6InNyYy9tb2R1bGVzL2F1dGgvY29udGFpbmVycy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3N0eWxlcy92YXJpYWJsZXMuc2Nzcyc7XHJcbi5wc2xvZ297XHJcbiAgICBtYXgtd2lkdGg6IC13ZWJraXQtZmlsbC1hdmFpbGFibGU7XHJcbn0iLCIucHNsb2dvIHtcbiAgbWF4LXdpZHRoOiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlO1xufSJdfQ== */\"","import { ChangeDetectionStrategy, Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, NgForm, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthResponseData, AuthService } from '@modules/auth/services';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'sb-login',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    error = '';\r\n    token = '';\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private modalService: NgbModal,\r\n        private router: Router,\r\n        private authService: AuthService\r\n    ) {}\r\n\r\n    /* Accessor Methods */\r\n\r\n    get emailControl() {\r\n        return this.loginForm.get('email') as FormControl;\r\n    }\r\n\r\n    get emailControlValid() {\r\n        return this.emailControl.touched && !this.emailControlInvalid;\r\n    }\r\n\r\n    get emailControlInvalid() {\r\n        return (\r\n            this.emailControl.touched &&\r\n            (this.emailControl.hasError('required') || this.emailControl.hasError('email'))\r\n        );\r\n    }\r\n\r\n    get passwordControl() {\r\n        return this.loginForm.get('password') as FormControl;\r\n    }\r\n\r\n    get passwordControlValid() {\r\n        return this.passwordControl.touched && !this.passwordControlInvalid;\r\n    }\r\n\r\n    get passwordControlInvalid() {\r\n        return (\r\n            this.passwordControl.touched &&\r\n            (this.passwordControl.hasError('required') ||\r\n                this.passwordControl.hasError('minlength'))\r\n        );\r\n    }\r\n    // isLoginMode = true;\r\n\r\n    @ViewChild('confirmationModal') confirmationModal!: TemplateRef<unknown>;\r\n    @ViewChild('errorModal') errorModal!: TemplateRef<unknown>;\r\n    loginForm = this.fb.group({\r\n        email: ['', [Validators.required, Validators.email]],\r\n        password: ['', [Validators.required, Validators.minLength(8)]],\r\n        checkbox: [false],\r\n    });\r\n\r\n    // onSwitchMode() {\r\n    //     this.isLoginMode = !this.isLoginMode;\r\n    // }\r\n    ngOnInit() {}\r\n\r\n    onSubmit() {\r\n        const email = this.loginForm.value.email;\r\n        const password = this.loginForm.value.password;\r\n        let authObs: Observable<AuthResponseData>;\r\n\r\n        if (this.loginForm.status === 'VALID') {\r\n            // console.log(email, password);\r\n            authObs = this.authService.login(email, password);\r\n        } else {\r\n            alert('This is alert box!');\r\n            console.log(email, password);\r\n        }\r\n        authObs.subscribe(\r\n            resData => {\r\n                console.log('restdata ', resData);\r\n                this.authService.isLogged.next(true);\r\n                this.authService.isLogged2 = true;\r\n                console.log(this.authService.isLogged2);\r\n                localStorage.setItem('access-token', resData.idToken);\r\n                this.router.navigate(['/talents/list']);\r\n                // console.log(localStorage.getItem('access-token'));\r\n            },\r\n            errorMessage => {\r\n                this.authService.isLogged.next(false);\r\n                console.log(errorMessage);\r\n                this.error = errorMessage;\r\n                this.modalService.open(this.errorModal).result.then(\r\n                    result => {\r\n                        if (result === 'ERROR') {\r\n                            this.router.navigate(['/auth/login']);\r\n                        }\r\n                    },\r\n                    reason => {}\r\n                );\r\n            }\r\n        );\r\n        for (const key in this.loginForm.controls) {\r\n            const control = this.loginForm.controls[key];\r\n            control.markAllAsTouched();\r\n        }\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvbXVsdGktdGVuYW50LWFkZC11c2Vycy9tdWx0aS10ZW5hbnQtYWRkLXVzZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { ChangeDetectionStrategy, Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'sbpro-multi-tenant-add-users',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './multi-tenant-add-users.component.html',\r\n    styleUrls: ['multi-tenant-add-users.component.scss'],\r\n})\r\nexport class MultiTenantAddUsersComponent implements OnInit {\r\n    @ViewChild('confirmationModal') confirmationModal!: TemplateRef<unknown>;\r\n\r\n    addUsersForm = this.fb.group({\r\n        emails: this.fb.array([this.fb.control('', [Validators.required, Validators.email])]),\r\n    });\r\n\r\n    constructor(private fb: FormBuilder, private modalService: NgbModal, private router: Router) {}\r\n    ngOnInit() {}\r\n\r\n    onSubmit() {\r\n        if (this.addUsersForm.status === 'VALID') {\r\n            this.modalService.open(this.confirmationModal).result.then(\r\n                result => {\r\n                    if (result === 'DASHBOARD') {\r\n                        this.router.navigate(['/dashboard']);\r\n                    }\r\n                },\r\n                reason => {}\r\n            );\r\n        }\r\n\r\n        for (const key in this.addUsersForm.controls) {\r\n            const control = this.addUsersForm.controls[key];\r\n            control.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    addAnother() {\r\n        this.emails.push(this.fb.control('', [Validators.required, Validators.email]));\r\n    }\r\n\r\n    /* Accessor Methods */\r\n\r\n    get emails() {\r\n        return this.addUsersForm.get('emails') as FormArray;\r\n    }\r\n\r\n    emailControlValid(index: number): boolean {\r\n        return this.emails.controls[index].touched && !this.emailControlInvalid(index);\r\n    }\r\n    emailControlInvalid(index: number) {\r\n        return (\r\n            this.emails.controls[index].touched &&\r\n            (this.emails.controls[index].hasError('required') ||\r\n                this.emails.controls[index].hasError('email'))\r\n        );\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvbXVsdGktdGVuYW50LXNlbGVjdC9tdWx0aS10ZW5hbnQtc2VsZWN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'sbpro-multi-tenant-select',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './multi-tenant-select.component.html',\r\n    styleUrls: ['multi-tenant-select.component.scss'],\r\n})\r\nexport class MultiTenantSelectComponent implements OnInit {\r\n    constructor() {}\r\n    ngOnInit() {}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvb3JnLWNyZWF0ZS9vcmctY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'sbpro-org-create',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './org-create.component.html',\r\n    styleUrls: ['org-create.component.scss'],\r\n})\r\nexport class OrgCreateComponent implements OnInit {\r\n    organizationNewForm = this.fb.group({\r\n        name: ['', [Validators.required]],\r\n    });\r\n\r\n    constructor(private fb: FormBuilder, private router: Router) {}\r\n    ngOnInit() {}\r\n\r\n    onSubmit() {\r\n        if (this.organizationNewForm.status === 'VALID') {\r\n            this.router.navigate(['/auth/multi-tenant-add-users']);\r\n        }\r\n\r\n        for (const key in this.organizationNewForm.controls) {\r\n            const control = this.organizationNewForm.controls[key];\r\n            control.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    /* Accessor Methods */\r\n\r\n    get nameControl() {\r\n        return this.organizationNewForm.get('name') as FormControl;\r\n    }\r\n\r\n    get nameControlValid() {\r\n        return this.nameControl.touched && !this.nameControlInvalid;\r\n    }\r\n\r\n    get nameControlInvalid() {\r\n        return this.nameControl.touched && this.nameControl.hasError('required');\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvb3JnLWpvaW4vb3JnLWpvaW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { ChangeDetectionStrategy, Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'sbpro-org-join',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './org-join.component.html',\r\n    styleUrls: ['org-join.component.scss'],\r\n})\r\nexport class OrgJoinComponent implements OnInit {\r\n    @ViewChild('confirmationModalAccessCode')\r\n    confirmationModalAccessCode!: TemplateRef<unknown>;\r\n    @ViewChild('confirmationModalRequest')\r\n    confirmationModalRequest!: TemplateRef<unknown>;\r\n\r\n    organizationJoinFormCode = this.fb.group({\r\n        code: ['', [Validators.required]],\r\n    });\r\n    organizationJoinFormRequest = this.fb.group({\r\n        name: ['', [Validators.required]],\r\n    });\r\n\r\n    constructor(private fb: FormBuilder, private modalService: NgbModal, private router: Router) {}\r\n    ngOnInit() {}\r\n\r\n    _reset() {\r\n        this.organizationJoinFormCode.reset();\r\n        this.organizationJoinFormRequest.reset();\r\n    }\r\n\r\n    onSubmitCode() {\r\n        if (this.organizationJoinFormCode.status === 'VALID') {\r\n            this.modalService.open(this.confirmationModalAccessCode).result.then(\r\n                result => {\r\n                    if (result === 'DASHBOARD') {\r\n                        return this.router.navigate(['/dashboard']);\r\n                    }\r\n                    this._reset();\r\n                    return true;\r\n                },\r\n                reason => {}\r\n            );\r\n        }\r\n        for (const key in this.organizationJoinFormCode.controls) {\r\n            const control = this.organizationJoinFormCode.controls[key];\r\n            control.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    onSubmitRequest() {\r\n        if (this.organizationJoinFormRequest.status === 'VALID') {\r\n            this.modalService.open(this.confirmationModalRequest).result.then(\r\n                result => {\r\n                    if (result === 'DASHBOARD') {\r\n                        return this.router.navigate(['/dashboard']);\r\n                    }\r\n                    this._reset();\r\n                    return true;\r\n                },\r\n                reason => {}\r\n            );\r\n        }\r\n        for (const key in this.organizationJoinFormRequest.controls) {\r\n            const control = this.organizationJoinFormRequest.controls[key];\r\n            control.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    /* Accessor Methods */\r\n\r\n    get codeControl() {\r\n        return this.organizationJoinFormCode.get('code') as FormControl;\r\n    }\r\n\r\n    get codeControlValid() {\r\n        return this.codeControl.touched && !this.codeControlInvalid;\r\n    }\r\n\r\n    get codeControlInvalid() {\r\n        return this.codeControl.touched && this.codeControl.hasError('required');\r\n    }\r\n\r\n    get nameControl() {\r\n        return this.organizationJoinFormRequest.get('name') as FormControl;\r\n    }\r\n\r\n    get nameControlValid() {\r\n        return this.nameControl.touched && !this.nameControlInvalid;\r\n    }\r\n\r\n    get nameControlInvalid() {\r\n        return this.nameControl.touched && this.nameControl.hasError('required');\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvcmVnaXN0ZXItc29jaWFsL3JlZ2lzdGVyLXNvY2lhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { ChangeDetectionStrategy, Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'sbpro-register-social',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './register-social.component.html',\r\n    styleUrls: ['register-social.component.scss'],\r\n})\r\nexport class RegisterSocialComponent implements OnInit {\r\n    @ViewChild('confirmationModal') confirmationModal!: TemplateRef<unknown>;\r\n\r\n    registerForm = this.fb.group(\r\n        {\r\n            firstName: ['', [Validators.required]],\r\n            lastName: ['', [Validators.required]],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            password: ['', [Validators.required, Validators.minLength(8)]],\r\n            confirmPassword: ['', [Validators.required]],\r\n            termsAndConditions: [false, [Validators.requiredTrue]],\r\n        },\r\n        { validator: this._checkPasswords }\r\n    );\r\n\r\n    constructor(private fb: FormBuilder, private modalService: NgbModal, private router: Router) {}\r\n    ngOnInit() {}\r\n\r\n    onSubmit() {\r\n        if (this.registerForm.status === 'VALID') {\r\n            this.modalService.open(this.confirmationModal).result.then(\r\n                result => {\r\n                    if (result === 'DASHBOARD') {\r\n                        this.router.navigate(['/dashboard']);\r\n                    }\r\n                },\r\n                reason => {}\r\n            );\r\n        }\r\n        for (const key in this.registerForm.controls) {\r\n            const control = this.registerForm.controls[key];\r\n            control.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    _checkPasswords(group: FormGroup) {\r\n        const pass = group.controls.password.value;\r\n        const confirmPass = group.controls.confirmPassword.value;\r\n\r\n        return pass === confirmPass ? null : { passwordMismatch: true };\r\n    }\r\n\r\n    /* Accessor Methods */\r\n\r\n    get firstNameControl() {\r\n        return this.registerForm.get('firstName') as FormControl;\r\n    }\r\n\r\n    get firstNameControlValid() {\r\n        return this.firstNameControl.touched && !this.firstNameControlInvalid;\r\n    }\r\n\r\n    get firstNameControlInvalid() {\r\n        return this.firstNameControl.touched && this.firstNameControl.hasError('required');\r\n    }\r\n\r\n    get lastNameControl() {\r\n        return this.registerForm.get('lastName') as FormControl;\r\n    }\r\n\r\n    get lastNameControlValid() {\r\n        return this.lastNameControl.touched && !this.lastNameControlInvalid;\r\n    }\r\n\r\n    get lastNameControlInvalid() {\r\n        return this.lastNameControl.touched && this.lastNameControl.hasError('required');\r\n    }\r\n\r\n    get emailControl() {\r\n        return this.registerForm.get('email') as FormControl;\r\n    }\r\n\r\n    get emailControlValid() {\r\n        return this.emailControl.touched && !this.emailControlInvalid;\r\n    }\r\n\r\n    get emailControlInvalid() {\r\n        return (\r\n            this.emailControl.touched &&\r\n            (this.emailControl.hasError('required') || this.emailControl.hasError('email'))\r\n        );\r\n    }\r\n\r\n    get passwordControl() {\r\n        return this.registerForm.get('password') as FormControl;\r\n    }\r\n\r\n    get passwordControlValid() {\r\n        return this.passwordControl.touched && !this.passwordControlInvalid;\r\n    }\r\n\r\n    get passwordControlInvalid() {\r\n        return (\r\n            this.passwordControl.touched &&\r\n            (this.passwordControl.hasError('required') ||\r\n                this.passwordControl.hasError('minlength'))\r\n        );\r\n    }\r\n\r\n    get confirmPasswordControl() {\r\n        return this.registerForm.get('confirmPassword') as FormControl;\r\n    }\r\n\r\n    get confirmPasswordControlValid() {\r\n        return this.confirmPasswordControl.touched && !this.confirmPasswordControlInvalid;\r\n    }\r\n\r\n    get confirmPasswordControlInvalid() {\r\n        return (\r\n            this.confirmPasswordControl.touched &&\r\n            (this.confirmPasswordControl.hasError('required') ||\r\n                this.confirmPasswordControl.hasError('minlength') ||\r\n                this.registerForm.hasError('passwordMismatch'))\r\n        );\r\n    }\r\n\r\n    get termsAndConditionsControl() {\r\n        return this.registerForm.get('termsAndConditions') as FormControl;\r\n    }\r\n\r\n    get termsAndConditionsControlValid() {\r\n        return this.termsAndConditionsControl.touched && !this.termsAndConditionsControlInvalid;\r\n    }\r\n\r\n    get termsAndConditionsControlInvalid() {\r\n        return (\r\n            this.termsAndConditionsControl.touched &&\r\n            this.termsAndConditionsControl.hasError('required')\r\n        );\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { ChangeDetectionStrategy, Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthResponseData, AuthService } from '@modules/auth/services';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'sb-register',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['register.component.scss'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n    @ViewChild('confirmationModal') confirmationModal!: TemplateRef<unknown>;\r\n    @ViewChild('errorModal') errorModal!: TemplateRef<unknown>;\r\n    error = '';\r\n    registerForm = this.fb.group(\r\n        {\r\n            firstName: ['', [Validators.required]],\r\n            lastName: ['', [Validators.required]],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            password: ['', [Validators.required, Validators.minLength(8)]],\r\n            confirmPassword: ['', [Validators.required]],\r\n        },\r\n        { validator: this._checkPasswords }\r\n    );\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private modalService: NgbModal,\r\n        private router: Router,\r\n        private authService: AuthService\r\n    ) {}\r\n    ngOnInit() {\r\n        this.authService.autoLogin();\r\n        console.log('sss');\r\n    }\r\n\r\n    onSubmit() {\r\n        const email = this.registerForm.value.email;\r\n        const password = this.registerForm.value.password;\r\n        let authObs: Observable<AuthResponseData>;\r\n\r\n        if (this.registerForm.status === 'VALID') {\r\n            authObs = this.authService.signup(email, password);\r\n            authObs.subscribe(\r\n                resData => {\r\n                    console.log(resData);\r\n                    this.modalService.open(this.confirmationModal).result.then(\r\n                        result => {\r\n                            if (result === 'TALENTS') {\r\n                                this.router.navigate(['/talents/list']);\r\n                            }\r\n                        },\r\n                        reason => {}\r\n                    );\r\n                },\r\n                errorMessage => {\r\n                    console.log(errorMessage);\r\n                    this.error = errorMessage;\r\n                }\r\n            );\r\n        } else {\r\n            this.modalService.open(this.errorModal).result.then(\r\n                result => {\r\n                    if (result === 'ERROR') {\r\n                        this.error = result;\r\n                        console.log(result);\r\n                        this.router.navigate(['/auth/register']);\r\n                    }\r\n                },\r\n                reason => {}\r\n            );\r\n        }\r\n        for (const key in this.registerForm.controls) {\r\n            const control = this.registerForm.controls[key];\r\n            control.markAllAsTouched();\r\n        }\r\n    }\r\n    _checkPasswords(group: FormGroup) {\r\n        const pass = group.controls.password.value;\r\n        const confirmPass = group.controls.confirmPassword.value;\r\n        return pass === confirmPass ? null : { passwordMismatch: true };\r\n    }\r\n    /* Accessor Methods */ get firstNameControl() {\r\n        return this.registerForm.get('firstName') as FormControl;\r\n    }\r\n    get firstNameControlValid() {\r\n        return this.firstNameControl.touched && !this.firstNameControlInvalid;\r\n    }\r\n    get firstNameControlInvalid() {\r\n        return this.firstNameControl.touched && this.firstNameControl.hasError('required');\r\n    }\r\n    get lastNameControl() {\r\n        return this.registerForm.get('lastName') as FormControl;\r\n    }\r\n    get lastNameControlValid() {\r\n        return this.lastNameControl.touched && !this.lastNameControlInvalid;\r\n    }\r\n    get lastNameControlInvalid() {\r\n        return this.lastNameControl.touched && this.lastNameControl.hasError('required');\r\n    }\r\n    get emailControl() {\r\n        return this.registerForm.get('email') as FormControl;\r\n    }\r\n    get emailControlValid() {\r\n        return this.emailControl.touched && !this.emailControlInvalid;\r\n    }\r\n    get emailControlInvalid() {\r\n        return (\r\n            this.emailControl.touched &&\r\n            (this.emailControl.hasError('required') || this.emailControl.hasError('email'))\r\n        );\r\n    }\r\n    get passwordControl() {\r\n        return this.registerForm.get('password') as FormControl;\r\n    }\r\n    get passwordControlValid() {\r\n        return this.passwordControl.touched && !this.passwordControlInvalid;\r\n    }\r\n    get passwordControlInvalid() {\r\n        return (\r\n            this.passwordControl.touched &&\r\n            (this.passwordControl.hasError('required') ||\r\n                this.passwordControl.hasError('minlength'))\r\n        );\r\n    }\r\n    get confirmPasswordControl() {\r\n        return this.registerForm.get('confirmPassword') as FormControl;\r\n    }\r\n    get confirmPasswordControlValid() {\r\n        return this.confirmPasswordControl.touched && !this.confirmPasswordControlInvalid;\r\n    }\r\n    get confirmPasswordControlInvalid() {\r\n        return (\r\n            this.confirmPasswordControl.touched &&\r\n            (this.confirmPasswordControl.hasError('required') ||\r\n                this.confirmPasswordControl.hasError('minlength') ||\r\n                this.registerForm.hasError('passwordMismatch'))\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    canActivate(): Observable<boolean> {\r\n        return of(true);\r\n    }\r\n}\r\n\r\n\r\n/* import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '../services';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private authService: AuthService) {}\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        router: RouterStateSnapshot\r\n    ): boolean | Promise<boolean> | Observable<boolean> {\r\n        return this.authService.user.pipe(\r\n            map((user: any) => {\r\n                return !!user;\r\n            })\r\n        );\r\n    }\r\n}\r\n */\r\n","import { AuthGuard } from './auth.guard';\r\n\r\nexport const guards = [AuthGuard];\r\n\r\nexport * from './auth.guard';\r\n","// tslint:disable: prettier\r\nimport { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpParams, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { exhaustMap, take } from 'rxjs/operators';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n    constructor(private authService: AuthService) {}\r\n\r\n    /* intercept(req: HttpRequest<any>, next: HttpHandler){\r\n\r\n        if(localStorage.getItem('access-token') != null) {\r\n            const token =  localStorage.getItem('access-token');\r\n            // const headers = new HttpHeaders().set('access-token', token);\r\n            const AuthRequest = req.clone({\r\n                params: new HttpParams().set('auth', token)\r\n            });\r\n            console.log(AuthRequest);\r\n            return next.handle(AuthRequest)\r\n        }else {\r\n            return next.handle(req);\r\n        }\r\n    } */\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        return this.authService.user.pipe(\r\n          take(1),\r\n          exhaustMap(user => {\r\n            if (!user) {\r\n              return next.handle(req);\r\n            }\r\n            const userReq = req.clone({\r\n              params: new HttpParams().set('auth', user.token)\r\n            });\r\n            return next.handle(userReq);\r\n          })\r\n        );\r\n      }\r\n\r\n}\r\n\r\n\r\n\r\n        /* console.log('//////////////////////////interceptor');\r\n                /* localStorage.setItem('token', 'code');\r\n                console.log(localStorage.getItem('token'));\r\n        const bla = this.authService.user.subscribe(value => {\r\n            console.log(value);\r\n        });\r\n        return this.authService.user.pipe(\r\n            take(1),\r\n            exhaustMap(user => {\r\n                console.log(user);\r\n                if (!user) {\r\n                    return next.handle(req);\r\n                }else{\r\n                    // console.log(user.token);\r\n                    const userReq = req.clone({\r\n                        params: new HttpParams().set('auth', user.token)\r\n                    });\r\n                    console.log(userReq.params);\r\n                    return next.handle(userReq);\r\n                }\r\n\r\n            })\r\n        );\r\n    }} */\r\n\r\n"],"sourceRoot":"webpack:///"}