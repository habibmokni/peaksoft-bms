{"version":3,"sources":["webpack:///src/modules/talents/containers/list/list.component.html","webpack:///src/modules/talents/containers/talents/talents.component.html","webpack:///src/modules/talents/components/index.ts","webpack:///src/modules/talents/containers/index.ts","webpack:///src/modules/talents/containers/list/list.component.scss","webpack:///src/modules/talents/containers/list/list.component.ts","webpack:///src/modules/talents/containers/talents/talents.component.scss","webpack:///src/modules/talents/containers/talents/talents.component.ts","webpack:///src/modules/talents/guards/index.ts","webpack:///src/modules/talents/guards/talents.guard.ts","webpack:///src/modules/talents/services/index.ts","webpack:///src/modules/talents/services/talents.service.ts","webpack:///src/modules/talents/talents-routing.module.ts","webpack:///src/modules/talents/talents.module.ts"],"names":["components","containers","ListComponent","modalService","talentsService","cd","authService","isAuthenticated","loadedProfiles","selectedProfileID","defaultJob","jobs","value","display","status","error","isFetching","userSub","user","subscribe","onFetchTalents","console","log","content","modalOptions","open","result","then","reason","_getDismissReason","ESC","BACKDROP_CLICK","form","createandStoreTalents","talents","message","unsubscribe","fetchTalents","detectChanges","id","deleteTalent","saveSelectedProfilID","showTalentProfil","selectedProfil","updateProfil","responseData","ProfilData","selector","changeDetection","OnPush","template","TalentsComponent","guards","TalentsGuard","services","TalentsService","http","userServ","post","param","auth","localStorage","getItem","get","params","pipe","talentsArray","key","hasOwnProperty","push","put","ROUTES","path","canActivate","component","children","pathMatch","redirectTo","data","title","TalentsRoutingModule","imports","forChild","exports","TalentsModule","providers","declarations"],"mappings":"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","file":"modules-talents-talents-routing-module-es5.js","sourcesContent":["export default \"<sbpro-dashboard-head icon=\\\"bar-chart\\\" title=\\\"Talents\\\"></sbpro-dashboard-head>\\r\\n<div class=\\\"container-fluid mt-n10\\\">\\r\\n  <sbpro-card>\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <div>\\r\\n        <button\\r\\n          class=\\\"btn btn-primary rounded-pill px-4 shadow-sm\\\"\\r\\n          type=\\\"button\\\"\\r\\n          id=\\\"add-talent-btn\\\"\\r\\n          (click)=\\\"open(modalNewTalent)\\\"\\r\\n        >\\r\\n          Neu Talent Hinzuf√ºgen\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Talents Table -->\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <!-- <sb-ng-bootstrap-table [pageSize]=\\\"4\\\"></sb-ng-bootstrap-table> -->\\r\\n      <div>\\r\\n        <p *ngIf=\\\"loadedProfiles.length < 1 && !isFetching\\\">\\r\\n          No Talents Available !\\r\\n        </p>\\r\\n        <div class=\\\"table-responsive-sm\\\">\\r\\n        <table class=\\\"table\\\" *ngIf=\\\"loadedProfiles.length >= 1 && !isFetching\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\">#</th>\\r\\n              <th scope=\\\"col\\\">Vorname</th>\\r\\n              <th scope=\\\"col\\\">Nachname</th>\\r\\n              <th scope=\\\"col\\\">Stelle</th>\\r\\n              <th scope=\\\"col\\\">Status</th>\\r\\n              <th scope=\\\"col\\\">Link</th>\\r\\n              <th scope=\\\"col\\\">Action</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody *ngFor=\\\"let profil of loadedProfiles; let i = index\\\">\\r\\n            <tr>\\r\\n              <th scope=\\\"row\\\">\\r\\n                {{ i + 1 }} <!-- {{ profil.id }} -->\\r\\n              </th>\\r\\n              <th>{{ profil.fname }}</th>\\r\\n              <th>{{ profil.lname }}</th>\\r\\n              <th>{{ profil.job }}</th>\\r\\n              <th\\r\\n                [ngStyle]=\\\"{\\r\\n                  color: profil.status === 'Contacted' ? 'green' : 'red'\\r\\n                }\\\"\\r\\n              >\\r\\n                {{ profil.status }}\\r\\n              </th>\\r\\n              <th>\\r\\n                <a href=\\\"{{ profil.profileLink }}\\\" target=\\\"_blank\\\">{{\\r\\n                  profil.profileLink\\r\\n                }}</a>\\r\\n              </th>\\r\\n              <th>\\r\\n                <button\\r\\n                (click)=\\\"open(modalDeleteTalent, {centered: true}); saveSelectedProfilID(profil.id)\\\"\\r\\n                  class=\\\"btn btn-outline-red btn-icon shadow-sm\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                >\\r\\n                  <i-feather name=\\\"Trash2\\\"></i-feather>\\r\\n                </button>\\r\\n                &nbsp;\\r\\n                <button\\r\\n                  (click)=\\\"\\r\\n                    onFetchTalentProfil(profil.id); open(modalTalentProfil)\\r\\n                  \\\"\\r\\n                  class=\\\"btn btn-outline-blue btn-icon shadow-sm\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                >\\r\\n                  <i-feather name=\\\"user\\\"></i-feather>\\r\\n                </button>\\r\\n                &nbsp;\\r\\n                <button\\r\\n                  (click)=\\\"\\r\\n                    onFetchTalentProfil(profil.id); open(modalEditTalent)\\r\\n                  \\\"\\r\\n                  class=\\\"btn btn-outline-green btn-icon shadow-sm\\\"\\r\\n                  type=\\\"button\\\"\\r\\n                >\\r\\n                  <i-feather name=\\\"settings\\\"></i-feather>\\r\\n                </button>\\r\\n              </th>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n        <p *ngIf=\\\"isFetching && !error\\\">L√§dt...{{ error }}</p>\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\r\\n          <h1>An Error Occurred!</h1>\\r\\n          <p>{{ error }}</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </sbpro-card>\\r\\n</div>\\r\\n\\r\\n<!-- MODAL ADD TALENT FORM -->\\r\\n<ng-template #modalNewTalent let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\">Neu Talent Hinzuf√ºgen</h5>\\r\\n    <button\\r\\n      class=\\\"close\\\"\\r\\n      type=\\\"button\\\"\\r\\n      aria-label=\\\"Close\\\"\\r\\n      (click)=\\\"modal.dismiss('Cross click')\\\"\\r\\n    >\\r\\n      <span aria-hidden=\\\"true\\\">√ó</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form (ngSubmit)=\\\"onSubmit(f.value); modal.close()\\\" #f=\\\"ngForm\\\">\\r\\n      <!-- access to the form Angular Created // f.value-->\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"col form-group\\\">\\r\\n          <label for=\\\"fname\\\">Vorname </label>\\r\\n          <input\\r\\n            id=\\\"fname\\\"\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Vorname\\\"\\r\\n            ngModel\\r\\n            name=\\\"fname\\\"\\r\\n            required\\r\\n          />\\r\\n        </div>\\r\\n        <!-- form-group end.// -->\\r\\n        <div class=\\\"col form-group\\\">\\r\\n          <label for=\\\"lname\\\">Nachname</label>\\r\\n          <input\\r\\n            id=\\\"lname\\\"\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            placeholder=\\\"Nachname\\\"\\r\\n            ngModel\\r\\n            name=\\\"lname\\\"\\r\\n            required\\r\\n          />\\r\\n        </div>\\r\\n        <!-- form-group end.// -->\\r\\n      </div>\\r\\n      <!-- form-row end.// -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"picture\\\">Picture Link</label>\\r\\n        <input\\r\\n          id=\\\"picture\\\"\\r\\n          type=\\\"text\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          placeholder=\\\"Profile Picture Link\\\"\\r\\n          ngModel\\r\\n          name=\\\"picture\\\"\\r\\n          required\\r\\n          #picture=\\\"ngModel\\\"\\r\\n        />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"!picture.valid && picture.touched\\\"\\r\\n          >Bitte geben Sie eine valide URL ein !</span\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"email\\\">Email Addresse</label>\\r\\n        <input\\r\\n          id=\\\"email\\\"\\r\\n          type=\\\"email\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          placeholder=\\\"\\\"\\r\\n          ngModel\\r\\n          name=\\\"email\\\"\\r\\n          required\\r\\n          email\\r\\n          #email=\\\"ngModel\\\"\\r\\n        />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"!email.valid && email.touched\\\"\\r\\n          >Bitte geben Sie eine valide E-Mail ein !</span\\r\\n        >\\r\\n      </div>\\r\\n      <!-- form-group end.// -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>Status</label>\\r\\n        <div class=\\\"form-control\\\">\\r\\n          <label class=\\\"radio-inline\\\">\\r\\n            <input\\r\\n              type=\\\"radio\\\"\\r\\n              name=\\\"status\\\"\\r\\n              value=\\\"Contacted\\\"\\r\\n              [(ngModel)]=\\\"status\\\"\\r\\n            />\\r\\n            <span> Contacted </span>&nbsp;\\r\\n          </label>\\r\\n          <label class=\\\"radio-inline\\\">\\r\\n            <input\\r\\n              type=\\\"radio\\\"\\r\\n              name=\\\"status\\\"\\r\\n              value=\\\"Not Contacted\\\"\\r\\n              [(ngModel)]=\\\"status\\\"\\r\\n            />\\r\\n            <span> Not Contacted </span>\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- form-group end.// -->\\r\\n      <div class=\\\"form-row\\\">\\r\\n        <div class=\\\"form-group col-md-6\\\">\\r\\n          <label for=\\\"tel\\\">Tel. Nummer</label>\\r\\n          <input id=\\\"tel\\\" type=\\\"text\\\" class=\\\"form-control\\\" ngModel name=\\\"tel\\\" />\\r\\n        </div>\\r\\n        <!-- form-group end.// -->\\r\\n        <div class=\\\"form-group col-md-6\\\">\\r\\n          <label for=\\\"job\\\">Stelle</label>\\r\\n          <select\\r\\n            id=\\\"job\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            [ngModel]=\\\"defaultJob\\\"\\r\\n            name=\\\"job\\\"\\r\\n          >\\r\\n            <option *ngFor=\\\"let job of jobs\\\" [value]=\\\"job.value\\\">{{\\r\\n              job.display\\r\\n            }}</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <!-- form-group end.// -->\\r\\n      </div>\\r\\n      <!-- form-row.// -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"profileLink\\\">Profile Link</label>\\r\\n        <input\\r\\n          id=\\\"profileLink\\\"\\r\\n          class=\\\"form-control\\\"\\r\\n          type=\\\"url\\\"\\r\\n          pattern=\\\"https?://.+\\\"\\r\\n          placeholder=\\\"https://example.com\\\"\\r\\n          ngModel\\r\\n          name=\\\"profileLink\\\"\\r\\n          required\\r\\n          #profileLink=\\\"ngModel\\\"\\r\\n        />\\r\\n        <span class=\\\"help-block\\\" *ngIf=\\\"!profileLink.valid && profileLink.touched\\\"\\r\\n          >Bitte geben Sie eine valide URL ein !</span\\r\\n        >\\r\\n      </div>\\r\\n      <!-- form-group end.// -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"notes\\\">Notes</label>\\r\\n        <textarea\\r\\n          class=\\\"form-control\\\"\\r\\n          name=\\\"notes\\\"\\r\\n          id=\\\"notes\\\"\\r\\n          rows=\\\"3\\\"\\r\\n          ngModel\\r\\n        ></textarea>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button\\r\\n          class=\\\"btn btn-danger\\\"\\r\\n          type=\\\"button\\\"\\r\\n          (click)=\\\"modal.close('Close Click')\\\"\\r\\n        >\\r\\n          Abbrechen\\r\\n        </button>\\r\\n        <button id=\\\"add-talent-sumbit-btn\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\">\\r\\n          Best√§tigen\\r\\n        </button>\\r\\n        <!-- (click)='modal.close(\\\"Save Click\\\")' -->\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- MODAL TALENT PROFILE -->\\r\\n\\r\\n<ng-template #modalTalentProfil let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\">Talent Profil</h5>\\r\\n    <button\\r\\n      class=\\\"close\\\"\\r\\n      type=\\\"button\\\"\\r\\n      aria-label=\\\"Close\\\"\\r\\n      (click)=\\\"modal.dismiss('Cross click')\\\"\\r\\n    >\\r\\n      <span aria-hidden=\\\"true\\\">√ó</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <!-- {{ selectedProfil.fname }} -->\\r\\n\\r\\n    <div>\\r\\n      <div class=\\\"profile-userpic\\\">\\r\\n        <img\\r\\n          [ngStyle]=\\\"{\\r\\n            border:\\r\\n              selectedProfil.status === 'Contacted'\\r\\n                ? '1px solid green'\\r\\n                : '1px solid red'\\r\\n          }\\\"\\r\\n          [src]=\\\"selectedProfil.picture\\\"\\r\\n          class=\\\"img-responsive\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <table class=\\\"table table-bordered\\\">\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td><i>Vorname</i></td>\\r\\n            <td>\\r\\n              <b>{{ selectedProfil.fname }}</b>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td><i>Nachname</i></td>\\r\\n            <td>\\r\\n              <b>{{ selectedProfil.lname }}</b>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td><i>E-mail</i></td>\\r\\n            <td>\\r\\n              <b>{{ selectedProfil.email }}</b>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td><i>Tel.</i></td>\\r\\n            <td>\\r\\n              <b>{{ selectedProfil.tel }}</b>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td><i>Status</i></td>\\r\\n            <td\\r\\n              [ngStyle]=\\\"{\\r\\n                color: selectedProfil.status === 'Contacted' ? 'green' : 'red'\\r\\n              }\\\"\\r\\n            >\\r\\n              <b>{{ selectedProfil.status }}</b>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td><i>Stelle</i></td>\\r\\n            <td>\\r\\n              <b>{{ selectedProfil.job }}</b>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td><i>Profil Link</i></td>\\r\\n            <!-- <td><b>{{ selectedProfil.profileLink }}</b></td> -->\\r\\n            <td>\\r\\n              <a [href]=\\\"selectedProfil.profileLink\\\" target=\\\"_blank\\\"\\r\\n                ><b>{{ selectedProfil.profileLink }}</b></a\\r\\n              >\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td><i>Notes</i></td>\\r\\n            <td>\\r\\n              <b>{{ selectedProfil.notes }}</b>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button\\r\\n      class=\\\"btn btn-danger\\\"\\r\\n      type=\\\"button\\\"\\r\\n      (click)=\\\"modal.close('Close Click')\\\"\\r\\n    >\\r\\n      Abbrechen\\r\\n    </button>\\r\\n    <!--<button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">\\r\\n          Best√§tigen\\r\\n        </button> -->\\r\\n    <!-- (click)='modal.close(\\\"Save Click\\\")' -->\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<!-- MODAL DELETE PROFIL -->\\r\\n\\r\\n<ng-template #modalDeleteTalent let-modal >\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\">L√∂schung best√§tigen</h5>\\r\\n        <button class=\\\"close\\\" type=\\\"button\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">√ó</span>\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <b style=\\\"color: red;\\\">Sind Sie sicher, dass Sie dieses Talentprofil l√∂schen m√∂chten ?</b>\\r\\n        <br>\\r\\n         <i>Dieses Element wird sofort gel√∂scht. Sie k√∂nnen diese Aktion nicht r√ºckg√§ngig machen.</i>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n        <button class=\\\"btn btn-outline-blue\\\" type=\\\"button\\\" (click)=\\\"modal.dismiss()\\\">Abbrechen</button>\\r\\n        <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"onDeleteTalents(selectedProfileID); modal.close()\\\">Entfernen</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- MODAL EDIT PROFIL -->\\r\\n\\r\\n<ng-template #modalEditTalent let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h5 class=\\\"modal-title\\\" id=\\\"editProfileLabel\\\">Edit Talent Profile</h5>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"close\\\"\\r\\n      (click)=\\\"modal.dismiss()\\\"\\r\\n      aria-label=\\\"Close\\\"\\r\\n    >\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <form (ngSubmit)=\\\"onUpdateTalentProfil(f.value); modal.close()\\\" #f=\\\"ngForm\\\">\\r\\n      <!-- first Name -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"firstname\\\" class=\\\"col-sm-4 col-form-label\\\"\\r\\n          >First Name</label\\r\\n        >\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"fname\\\"\\r\\n            [(ngModel)]=\\\"selectedProfil.fname\\\"\\r\\n            name=\\\"fname\\\"\\r\\n          />\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- last Name -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"lastname\\\" class=\\\"col-sm-4 col-form-label\\\">Last Name</label>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"lname\\\"\\r\\n            [(ngModel)]=\\\"selectedProfil.lname\\\"\\r\\n            name=\\\"lname\\\"\\r\\n          />\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- email -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"email\\\" class=\\\"col-sm-4 col-form-label\\\">Email</label>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <input\\r\\n            type=\\\"email\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"email\\\"\\r\\n            [(ngModel)]=\\\"selectedProfil.email\\\"\\r\\n            name=\\\"email\\\"\\r\\n          />\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- tel -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"tel\\\" class=\\\"col-sm-4 col-form-label\\\">Tel Nummer :</label>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <input\\r\\n            type=\\\"tel\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"tel\\\"\\r\\n            name=\\\"tel\\\"\\r\\n            [(ngModel)]=\\\"selectedProfil.tel\\\"\\r\\n          />\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- picture -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"picture\\\" class=\\\"col-sm-4 col-form-label\\\">Bild :</label>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <input\\r\\n            type=\\\"picture\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"picture\\\"\\r\\n            name=\\\"picture\\\"\\r\\n            [(ngModel)]=\\\"selectedProfil.picture\\\"\\r\\n          />\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- profileLink -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"profileLink\\\" class=\\\"col-sm-4 col-form-label\\\"\\r\\n          >Profile Link :</label\\r\\n        >\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <input\\r\\n            type=\\\"profileLink\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"profileLink\\\"\\r\\n            [(ngModel)]=\\\"selectedProfil.profileLink\\\"\\r\\n            name=\\\"profileLink\\\"\\r\\n          />\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- job/stelle -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"job\\\" class=\\\"col-sm-4 col-form-label\\\">Stelle</label>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <select type=\\\"job\\\" name=\\\"job\\\" class=\\\"form-control\\\" id=\\\"job\\\" [(ngModel)]=\\\"selectedProfil.job\\\">\\r\\n            <option\\r\\n              *ngFor=\\\"let job of jobs\\\"\\r\\n              [selected]=\\\"selectedProfil.job == job.value\\\"\\r\\n              value=\\\"{{ job.value }}\\\"\\r\\n              >{{ job.display }}</option\\r\\n            >\\r\\n          </select>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- status -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"status\\\" class=\\\"col-sm-4 col-form-label\\\">Status</label>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"form-control\\\">\\r\\n              <label class=\\\"radio-inline\\\">\\r\\n                <input\\r\\n                  type=\\\"radio\\\"\\r\\n                  name=\\\"status\\\"\\r\\n                  value=\\\"Contacted\\\"\\r\\n                  [(ngModel)]=\\\"selectedProfil.status\\\"\\r\\n                  [checked]=\\\"selectedProfil.status === 'Contacted'\\\"\\r\\n                />\\r\\n                <span> kontaktiert </span>&nbsp;\\r\\n              </label>\\r\\n              <label class=\\\"radio-inline\\\">\\r\\n                <input\\r\\n                  type=\\\"radio\\\"\\r\\n                  name=\\\"status\\\"\\r\\n                  value=\\\"Not Contacted\\\"\\r\\n                  [(ngModel)]=\\\"selectedProfil.status\\\"\\r\\n                  [checked]=\\\"selectedProfil.status === 'Not Contacted'\\\"\\r\\n                />\\r\\n                <span> Nicht kontaktiert </span>\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- notes -->\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"notes\\\" class=\\\"col-sm-4 col-form-label\\\">Notes</label>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n          <textarea\\r\\n            class=\\\"form-control\\\"\\r\\n            name=\\\"notes\\\"\\r\\n            id=\\\"notes\\\"\\r\\n            rows=\\\"3\\\"\\r\\n            [(ngModel)]=\\\"selectedProfil.notes\\\"\\r\\n          ></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- footer -->\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button\\r\\n          type=\\\"button\\\"\\r\\n          class=\\\"btn btn-outline-red\\\"\\r\\n          (click)=\\\"modal.dismiss()\\\"\\r\\n        >\\r\\n          Beenden\\r\\n        </button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">\\r\\n          √Ñnderungen speichern\\r\\n        </button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","export default \"<ps-layout-talents><router-outlet></router-outlet></ps-layout-talents>\\n\"","export const components: any = [];\r\n","import { TalentsComponent } from './talents/talents.component';\r\nimport { ListComponent } from './list/list.component';\r\n\r\nexport const containers = [TalentsComponent, ListComponent];\r\n\r\nexport * from './talents/talents.component';\r\nexport * from './list/list.component';\r\n","export default \"input.ng-invalid.ng-touched, select.ng-invalid.ng.touched {\\n  border: 1px solid red;\\n}\\n\\n.profile-userpic img {\\n  display: block;\\n  margin: 10px auto;\\n  width: 10em;\\n  height: 10em;\\n  padding: 0.8em;\\n  border-radius: 50% !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL3RhbGVudHMvY29udGFpbmVycy9saXN0L0M6XFxVc2Vyc1xcSGFiaWJNb2tuaVxcRG9jdW1lbnRzXFxHaXRIdWJcXHBzLWJtcy9zcmNcXG1vZHVsZXNcXHRhbGVudHNcXGNvbnRhaW5lcnNcXGxpc3RcXGxpc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvbW9kdWxlcy90YWxlbnRzL2NvbnRhaW5lcnMvbGlzdC9saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kscUJBQUE7QUNDSjs7QURDQTtFQUNJLGNBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtFQUdBLDZCQUFBO0FDRUoiLCJmaWxlIjoic3JjL21vZHVsZXMvdGFsZW50cy9jb250YWluZXJzL2xpc3QvbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0Lm5nLWludmFsaWQubmctdG91Y2hlZCwgc2VsZWN0Lm5nLWludmFsaWQubmcudG91Y2hlZHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcclxufVxyXG4ucHJvZmlsZS11c2VycGljIGltZyB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbjogMTBweCBhdXRvO1xyXG4gICAgd2lkdGg6IDEwZW07XHJcbiAgICBoZWlnaHQ6IDEwZW07XHJcbiAgICBwYWRkaW5nOiAwLjhlbTtcclxuICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogNTAlICFpbXBvcnRhbnQ7XHJcbiAgICAtbW96LWJvcmRlci1yYWRpdXM6IDUwJSAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlICFpbXBvcnRhbnQ7XHJcbn0iLCJpbnB1dC5uZy1pbnZhbGlkLm5nLXRvdWNoZWQsIHNlbGVjdC5uZy1pbnZhbGlkLm5nLnRvdWNoZWQge1xuICBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG59XG5cbi5wcm9maWxlLXVzZXJwaWMgaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMTBweCBhdXRvO1xuICB3aWR0aDogMTBlbTtcbiAgaGVpZ2h0OiAxMGVtO1xuICBwYWRkaW5nOiAwLjhlbTtcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA1MCUgIWltcG9ydGFudDtcbiAgLW1vei1ib3JkZXItcmFkaXVzOiA1MCUgIWltcG9ydGFudDtcbiAgYm9yZGVyLXJhZGl1czogNTAlICFpbXBvcnRhbnQ7XG59Il19 */\"","import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    OnDestroy,\r\n    OnInit,\r\n    TemplateRef,\r\n} from '@angular/core';\r\nimport { AuthService } from '@modules/auth/services';\r\nimport { talentProfil } from '@modules/talents/interfaces/talentsProfil';\r\nimport { TalentsService } from '@modules/talents/services';\r\nimport { ModalDismissReasons, NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'ps-list',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './list.component.html',\r\n    styleUrls: ['./list.component.scss'],\r\n})\r\nexport class ListComponent implements OnInit, OnDestroy {\r\n    isAuthenticated = false;\r\n    loadedProfiles: talentProfil[] = [];\r\n    selectedProfil: any;\r\n    ProfilData: any;\r\n    selectedProfileID = '';\r\n    defaultJob = 'Front End Senior';\r\n    jobs = [\r\n        { value: 'Front End Senior', display: 'Front End Senior' },\r\n        { value: 'Front End Junior', display: 'Front End Junior' },\r\n        { value: 'Back End Senior', display: 'Back End Senior' },\r\n        { value: 'Back End Junior', display: 'Back End Junior' },\r\n        { value: 'Senior Fullstack', display: 'Senior Fullstack' },\r\n        { value: 'Junior Fullstack', display: 'Junior Fullstack' },\r\n        { value: 'Testautomatisierer', display: 'Testautomatisierer' },\r\n        { value: 'Werkstudent', display: 'Werkstudent' },\r\n    ];\r\n    status = 'Contacted';\r\n    // notes = 'this.selectedProfil.notes';\r\n    error: any = null;\r\n    isFetching = false;\r\n    userSub: Subscription;\r\n\r\n    constructor(\r\n        private modalService: NgbModal,\r\n        private talentsService: TalentsService,\r\n        private cd: ChangeDetectorRef,\r\n        private authService: AuthService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.userSub = this.authService.user.subscribe(user => {\r\n            this.onFetchTalents();\r\n            this.isAuthenticated = !!user;\r\n            console.log(this.isAuthenticated);\r\n        });\r\n    }\r\n\r\n    open(content: TemplateRef<any>, modalOptions: NgbModalOptions = {}) {\r\n        this.modalService.open(content, modalOptions).result.then(\r\n            result => {\r\n                console.log(`closed with ${result}`);\r\n            },\r\n            reason => {\r\n                console.log(`Dismissed ${this._getDismissReason(reason)}`);\r\n            }\r\n        );\r\n    }\r\n\r\n    _getDismissReason(reason: unknown): string {\r\n        if (reason === ModalDismissReasons.ESC) {\r\n            return 'by pressing ESC';\r\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n            return 'by clicking on a backdrop';\r\n        } else {\r\n            return `with: ${reason}`;\r\n        }\r\n    }\r\n\r\n    onSubmit(form: talentProfil) {\r\n        // Send Http request\r\n        this.talentsService.createandStoreTalents(form).subscribe(\r\n            talents => {\r\n                // this.isFetching = false;\r\n                // this.loadedProfiles = talents;\r\n                // this.cd.detectChanges();\r\n                this.onFetchTalents();\r\n            },\r\n            error => {\r\n                // this.isFetching = false;\r\n                this.error = error.message;\r\n            }\r\n        );\r\n        // this.cd.detectChanges();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.userSub.unsubscribe();\r\n    }\r\n\r\n    onFetchTalents() {\r\n        this.isFetching = true;\r\n        this.talentsService.fetchTalents().subscribe(\r\n            talents => {\r\n                this.isFetching = false;\r\n                this.loadedProfiles = talents;\r\n                this.cd.detectChanges();\r\n            },\r\n            error => {\r\n                this.isFetching = false;\r\n                this.error = error.message;\r\n            }\r\n        );\r\n    }\r\n    onDeleteTalents(id: string) {\r\n        console.log(id);\r\n        this.talentsService.deleteTalent(id).subscribe(() => {\r\n            this.loadedProfiles = [];\r\n            this.cd.detectChanges();\r\n            this.onFetchTalents();\r\n        });\r\n    }\r\n\r\n    onFetchTalentProfil(id: string) {\r\n        this.saveSelectedProfilID(id);\r\n        console.log(id);\r\n        this.talentsService.showTalentProfil(id).subscribe(value => {\r\n            console.log(value);\r\n            return (this.selectedProfil = value);\r\n        });\r\n    }\r\n\r\n    onUpdateTalentProfil(form: talentProfil, id: string) {\r\n        console.log(form);\r\n        this.talentsService.updateProfil(form, this.selectedProfileID).subscribe(responseData => {\r\n            console.log(responseData);\r\n            this.ProfilData = responseData;\r\n            this.onFetchTalents();\r\n        });\r\n        // this.cd.detectChanges();\r\n        // this.onFetchTalents();\r\n    }\r\n\r\n    saveSelectedProfilID(value: string) {\r\n        this.selectedProfileID = value;\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy90YWxlbnRzL2NvbnRhaW5lcnMvdGFsZW50cy90YWxlbnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ps-talents',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    templateUrl: './talents.component.html',\r\n    styleUrls: ['talents.component.scss'],\r\n})\r\nexport class TalentsComponent implements OnInit {\r\n    constructor() {}\r\n    ngOnInit() {}\r\n}\r\n","import { TalentsGuard } from './talents.guard';\r\n\r\nexport const guards = [TalentsGuard];\r\n\r\nexport * from './talents.guard';\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TalentsGuard implements CanActivate {\r\n    canActivate(): Observable<boolean> {\r\n        return of(true);\r\n    }\r\n}\r\n","import { TalentsService } from './talents.service';\r\n\r\nexport const services = [TalentsService];\r\n\r\nexport * from './talents.service';\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService, UserService } from '@modules/auth/services';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { talentProfil } from '../interfaces/talentsProfil';\r\n\r\n@Injectable()\r\nexport class TalentsService {\r\n    ProfilData: any;\r\n    constructor(\r\n        private http: HttpClient,\r\n        private userServ: UserService,\r\n        private authService: AuthService\r\n    ) {}\r\n\r\n    createandStoreTalents(form: talentProfil): Observable<any> {\r\n        return this.http.post<{ name: string }>(\r\n            'https://peaksoft-47458.firebaseio.com/talents.json',\r\n            form\r\n        );\r\n    }\r\n\r\n    fetchTalents() {\r\n        const param = {\r\n            auth: localStorage.getItem('access-token'),\r\n        };\r\n        return this.http\r\n            .get<{ [key: string]: talentProfil }>(\r\n                'https://peaksoft-47458.firebaseio.com/talents.json',\r\n                { params: param }\r\n            )\r\n            .pipe(\r\n                map(responseData => {\r\n                    const talentsArray: talentProfil[] = [];\r\n                    for (const key in responseData) {\r\n                        if (responseData.hasOwnProperty(key)) {\r\n                            talentsArray.push({ ...responseData[key], id: key });\r\n                            // console.log(this.authService.login);\r\n                        }\r\n                    }\r\n                    console.log(talentsArray);\r\n                    return talentsArray;\r\n                })\r\n            );\r\n    }\r\n\r\n    deleteTalent(id: string) {\r\n        const param = {\r\n            auth: localStorage.getItem('access-token'),\r\n        };\r\n        return this.http.delete(`https://peaksoft-47458.firebaseio.com/talents/${id}.json`);\r\n    }\r\n\r\n    showTalentProfil(id: string) {\r\n        const param = {\r\n            auth: localStorage.getItem('access-token'),\r\n        };\r\n        return this.http.get(`https://peaksoft-47458.firebaseio.com/talents/${id}.json`).pipe(\r\n            map(responseData => {\r\n                // console.log(responseData);\r\n                this.ProfilData = responseData;\r\n                return responseData;\r\n            })\r\n        );\r\n    }\r\n\r\n    updateProfil(form: talentProfil, id: string) {\r\n        console.log(id);\r\n        return this.http.put(`https://peaksoft-47458.firebaseio.com/talents/${id}.json`, form);\r\n    }\r\n\r\n    /* getTalents$(): Observable<{}> {\r\n        return of({});\r\n    } */\r\n}\r\n","/* tslint:disable: ordered-imports*/\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n/* Module */\r\nimport { TalentsModule } from './talents.module';\r\n\r\n/* Containers */\r\nimport * as talentsContainers from './containers';\r\n\r\n/* Guards */\r\nimport * as talentsGuards from './guards';\r\nimport { SBRouteData } from '@modules/navigation/models';\r\n\r\n/* Routes */\r\nexport const ROUTES: Routes = [\r\n    {\r\n        path: '',\r\n        canActivate: [],\r\n        component: talentsContainers.TalentsComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                pathMatch: 'full',\r\n                redirectTo: 'list',\r\n            },\r\n            {\r\n                path: 'list',\r\n                data: {\r\n                    title: 'Talents List',\r\n                } as SBRouteData,\r\n                component: talentsContainers.ListComponent,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [TalentsModule, RouterModule.forChild(ROUTES)],\r\n    exports: [RouterModule],\r\n})\r\nexport class TalentsRoutingModule {}\r\n","/* tslint:disable: ordered-imports*/\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n/* Modules */\r\nimport { AppCommonModule } from '@common/app-common.module';\r\nimport { NavigationModule } from '@modules/navigation/navigation.module';\r\n\r\n/* Components */\r\nimport * as talentsComponents from './components';\r\n\r\n/* Containers */\r\nimport * as talentsContainers from './containers';\r\n\r\n/* Guards */\r\nimport * as talentsGuards from './guards';\r\n\r\n/* Services */\r\nimport * as talentsServices from './services';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        AppCommonModule,\r\n        NavigationModule,\r\n    ],\r\n    providers: [...talentsServices.services, ...talentsGuards.guards],\r\n    declarations: [...talentsContainers.containers, ...talentsComponents.components],\r\n    exports: [...talentsContainers.containers, ...talentsComponents.components],\r\n})\r\nexport class TalentsModule {}\r\n"]}